use super::{font_basic, CHARSET};
use crate::error::CustomProgramError;
use anchor_lang::prelude::*;

enum Style {
    Font1Row,
    Font3D,
    Font3DDiagonal,
    Font3DAscii,
    Font3X5,
    Font4Max,
    Font5LineOblique,
    FontAmc3Line,
    FontAmc3Liv1,
    FontAmcAaa01,
    FontAmcNeko,
    FontAmcRazor,
    FontAmcRazor2,
    FontAmcSlash,
    FontAmcSlider,
    FontAmcThin,
    FontAmcTubes,
    FontAmcUntitled,
    FontAnsiRegular,
    FontAnsiShadow,
    FontAsciiNewRoman,
    FontAcrobatic,
    FontAlligator,
    FontAlligator2,
    FontAlpha,
    FontAlphabet,
    FontArrows,
    FontAvatar,
    FontB1Ff,
    FontBanner,
    FontBanner3D,
    FontBanner3,
    FontBanner4,
    FontBarbwire,
    FontBasic,
    FontBear,
    FontBell,
    FontBenjamin,
    FontBigChief,
    FontBigMoneyNe,
    FontBigMoneyNw,
    FontBigMoneySe,
    FontBigMoneySw,
    FontBig,
    FontBigfig,
    FontBinary,
    FontBlock,
    FontBlocks,
    FontBloody,
    FontBolger,
    FontBraced,
    FontBright,
    FontBroadwayKb,
    FontBroadway,
    FontBubble,
    FontBulbhead,
    FontCaligraphy,
    FontCaligraphy2,
    FontCalvinS,
    FontCards,
    FontCatwalk,
    FontChiseled,
    FontChunky,
    FontCoinstak,
    FontCola,
    FontColossal,
    FontComputer,
    FontContessa,
    FontContrast,
    FontCosmike,
    FontCrawford,
    FontCrawford2,
    FontCrazy,
    FontCricket,
    FontCursive,
    FontCyberlarge,
    FontCybermedium,
    FontCybersmall,
    FontCygnet,
    FontDanc4,
    FontDosRebel,
    FontDwhistled,
    FontDancingFont,
    FontDecimal,
    FontDefLeppard,
    FontDeltaCorpsPriest1,
    FontDiamond,
    FontDietCola,
    FontDigital,
    FontDoh,
    FontDoom,
    FontDotMatrix,
    FontDoubleShorts,
    FontDouble,
    FontDrPepper,
    FontEftiChess,
    FontEftiFont,
    FontEftiItalic,
    FontEftiPiti,
    FontEftiRobot,
    FontEftiWall,
    FontEftiWater,
    FontElectronic,
    FontElite,
    FontEpic,
    FontFender,
    FontFilter,
    FontFireFontK,
    FontFireFontS,
    FontFlipped,
    FontFlowerPower,
    FontFourTops,
    FontFraktur,
    FontFunFace,
    FontFunFaces,
    FontFuzzy,
    FontGeorgi16,
    FontGeorgia11,
    FontGhost,
    FontGhoulish,
    FontGlenyn,
    FontGoofy,
    FontGothic,
    FontGraceful,
    FontGradient,
    FontGraffiti,
    FontGreek,
    FontHeartLeft,
    FontHeartRight,
    FontHenry3D,
    FontHex,
    FontHieroglyphs,
    FontHollywood,
    FontHorizontalLeft,
    FontHorizontalRight,
    FontIcl1900,
    FontImpossible,
    FontInvita,
    FontIsometric1,
    FontIsometric2,
    FontIsometric3,
    FontIsometric4,
    FontItalic,
    FontIvrit,
    FontJsBlockLetters,
    FontJsBracketLetters,
    FontJsCapitalCurves,
    FontJsCursive,
    FontJsStickLetters,
    FontJacky,
    FontJazmine,
    FontJerusalem,
    FontKatakana,
    FontKban,
    FontKeyboard,
    FontKnob,
    FontKontoSlant,
    FontKonto,
    FontLcd,
    FontLarry3D2,
    FontLarry3D,
    FontLean,
    FontLetters,
    FontLilDevil,
    FontLineBlocks,
    FontLinux,
    FontLockergnome,
    FontMadrid,
    FontMarquee,
    FontMaxfour,
    FontMerlin1,
    FontMerlin2,
    FontMike,
    FontMini,
    FontMirror,
    FontMnemonic,
    FontModular,
    FontMorse,
    FontMorse2,
    FontMoscow,
    FontMshebrew210,
    FontMuzzle,
    FontNscript,
    FontNtGreek,
    FontNvScript,
    FontNancyjFancy,
    FontNancyjImproved,
    FontNancyjUnderlined,
    FontNancyj,
    FontNipples,
    FontO8,
    FontOs2,
    FontOctal,
    FontOgre,
    FontOldBanner,
    FontPagga,
    FontPatorjksCheese,
    FontPatorjkHex,
    FontPawp,
    FontPeaksSlant,
    FontPeaks,
    FontPebbles,
    FontPepper,
    FontPoison,
    FontPuffy,
    FontPuzzle,
    FontPyramid,
    FontRammstein,
    FontRectangles,
    FontRedPhoenix,
    FontRelief,
    FontRelief2,
    FontReverse,
    FontRoman,
    FontRot13,
    FontRotated,
    FontRounded,
    FontRowanCap,
    FontRozzo,
    FontRunic,
    FontRunyc,
    FontSBlood,
    FontSlScript,
    FontSantaClara,
    FontScript,
    FontSerifcap,
    FontShadow,
    FontShimrod,
    FontShort,
    FontSlantRelief,
    FontSlant,
    FontSlide,
    FontSmallCaps,
    FontSmallIsometric1,
    FontSmallKeyboard,
    FontSmallPoison,
    FontSmallScript,
    FontSmallShadow,
    FontSmallSlant,
    FontSmallTengwar,
    FontSmall,
    FontSoft,
    FontSpeed,
    FontSpliff,
    FontStacey,
    FontStampate,
    FontStampatello,
    FontStandard,
    FontStarStrips,
    FontStarWars,
    FontStellar,
    FontStforek,
    FontStickLetters,
    FontStop,
    FontStraight,
    FontStrongerThanAll,
    FontSubZero,
    FontSwampLand,
    FontSwan,
    FontSweet,
    FontThis,
    FontTanja,
    FontTengwar,
    FontTerm,
    FontTest1,
    FontTheEdge,
    FontThick,
    FontThin,
    FontThorned,
    FontThreePoint,
    FontTicksSlant,
    FontTicks,
    FontTiles,
    FontTinkerToy,
    FontTombstone,
    FontTrain,
    FontTrek,
    FontTsalagi,
    FontTubular,
    FontTwisted,
    FontTwoPoint,
    FontUsaFlag,
    FontUnivers,
    FontVarsity,
    FontWavy,
    FontWeird,
    FontWetLetter,
    FontWhimsy,
    FontWow,
}

impl TryFrom<u16> for Style {
    type Error = CustomProgramError;

    fn try_from(v: u16) -> std::result::Result<Self, Self::Error> {
        match v {
            x if x == Style::font1Row as u16 => Ok(Style::font1Row),
            x if x == Style::font3D as u16 => Ok(Style::font3D),
            x if x == Style::font3DDiagonal as u16 => Ok(Style::font3DDiagonal),
            x if x == Style::font3DAscii as u16 => Ok(Style::font3DAscii),
            x if x == Style::font3X5 as u16 => Ok(Style::font3X5),
            x if x == Style::font4Max as u16 => Ok(Style::font4Max),
            x if x == Style::font5LineOblique as u16 => Ok(Style::font5LineOblique),
            x if x == Style::fontAmc3Line as u16 => Ok(Style::fontAmc3Line),
            x if x == Style::fontAmc3Liv1 as u16 => Ok(Style::fontAmc3Liv1),
            x if x == Style::fontAmcAaa01 as u16 => Ok(Style::fontAmcAaa01),
            x if x == Style::fontAmcNeko as u16 => Ok(Style::fontAmcNeko),
            x if x == Style::fontAmcRazor as u16 => Ok(Style::fontAmcRazor),
            x if x == Style::fontAmcRazor2 as u16 => Ok(Style::fontAmcRazor2),
            x if x == Style::fontAmcSlash as u16 => Ok(Style::fontAmcSlash),
            x if x == Style::fontAmcSlider as u16 => Ok(Style::fontAmcSlider),
            x if x == Style::fontAmcThin as u16 => Ok(Style::fontAmcThin),
            x if x == Style::fontAmcTubes as u16 => Ok(Style::fontAmcTubes),
            x if x == Style::fontAmcUntitled as u16 => Ok(Style::fontAmcUntitled),
            x if x == Style::fontAnsiRegular as u16 => Ok(Style::fontAnsiRegular),
            x if x == Style::fontAnsiShadow as u16 => Ok(Style::fontAnsiShadow),
            x if x == Style::fontAsciiNewRoman as u16 => Ok(Style::fontAsciiNewRoman),
            x if x == Style::fontAcrobatic as u16 => Ok(Style::fontAcrobatic),
            x if x == Style::fontAlligator as u16 => Ok(Style::fontAlligator),
            x if x == Style::fontAlligator2 as u16 => Ok(Style::fontAlligator2),
            x if x == Style::fontAlpha as u16 => Ok(Style::fontAlpha),
            x if x == Style::fontAlphabet as u16 => Ok(Style::fontAlphabet),
            x if x == Style::fontArrows as u16 => Ok(Style::fontArrows),
            x if x == Style::fontAvatar as u16 => Ok(Style::fontAvatar),
            x if x == Style::fontB1Ff as u16 => Ok(Style::fontB1Ff),
            x if x == Style::fontBanner as u16 => Ok(Style::fontBanner),
            x if x == Style::fontBanner3D as u16 => Ok(Style::fontBanner3D),
            x if x == Style::fontBanner3 as u16 => Ok(Style::fontBanner3),
            x if x == Style::fontBanner4 as u16 => Ok(Style::fontBanner4),
            x if x == Style::fontBarbwire as u16 => Ok(Style::fontBarbwire),
            x if x == Style::fontBasic as u16 => Ok(Style::fontBasic),
            x if x == Style::fontBear as u16 => Ok(Style::fontBear),
            x if x == Style::fontBell as u16 => Ok(Style::fontBell),
            x if x == Style::fontBenjamin as u16 => Ok(Style::fontBenjamin),
            x if x == Style::fontBigChief as u16 => Ok(Style::fontBigChief),
            x if x == Style::fontBigMoneyNe as u16 => Ok(Style::fontBigMoneyNe),
            x if x == Style::fontBigMoneyNw as u16 => Ok(Style::fontBigMoneyNw),
            x if x == Style::fontBigMoneySe as u16 => Ok(Style::fontBigMoneySe),
            x if x == Style::fontBigMoneySw as u16 => Ok(Style::fontBigMoneySw),
            x if x == Style::fontBig as u16 => Ok(Style::fontBig),
            x if x == Style::fontBigfig as u16 => Ok(Style::fontBigfig),
            x if x == Style::fontBinary as u16 => Ok(Style::fontBinary),
            x if x == Style::fontBlock as u16 => Ok(Style::fontBlock),
            x if x == Style::fontBlocks as u16 => Ok(Style::fontBlocks),
            x if x == Style::fontBloody as u16 => Ok(Style::fontBloody),
            x if x == Style::fontBolger as u16 => Ok(Style::fontBolger),
            x if x == Style::fontBraced as u16 => Ok(Style::fontBraced),
            x if x == Style::fontBright as u16 => Ok(Style::fontBright),
            x if x == Style::fontBroadwayKb as u16 => Ok(Style::fontBroadwayKb),
            x if x == Style::fontBroadway as u16 => Ok(Style::fontBroadway),
            x if x == Style::fontBubble as u16 => Ok(Style::fontBubble),
            x if x == Style::fontBulbhead as u16 => Ok(Style::fontBulbhead),
            x if x == Style::fontCaligraphy as u16 => Ok(Style::fontCaligraphy),
            x if x == Style::fontCaligraphy2 as u16 => Ok(Style::fontCaligraphy2),
            x if x == Style::fontCalvinS as u16 => Ok(Style::fontCalvinS),
            x if x == Style::fontCards as u16 => Ok(Style::fontCards),
            x if x == Style::fontCatwalk as u16 => Ok(Style::fontCatwalk),
            x if x == Style::fontChiseled as u16 => Ok(Style::fontChiseled),
            x if x == Style::fontChunky as u16 => Ok(Style::fontChunky),
            x if x == Style::fontCoinstak as u16 => Ok(Style::fontCoinstak),
            x if x == Style::fontCola as u16 => Ok(Style::fontCola),
            x if x == Style::fontColossal as u16 => Ok(Style::fontColossal),
            x if x == Style::fontComputer as u16 => Ok(Style::fontComputer),
            x if x == Style::fontContessa as u16 => Ok(Style::fontContessa),
            x if x == Style::fontContrast as u16 => Ok(Style::fontContrast),
            x if x == Style::fontCosmike as u16 => Ok(Style::fontCosmike),
            x if x == Style::fontCrawford as u16 => Ok(Style::fontCrawford),
            x if x == Style::fontCrawford2 as u16 => Ok(Style::fontCrawford2),
            x if x == Style::fontCrazy as u16 => Ok(Style::fontCrazy),
            x if x == Style::fontCricket as u16 => Ok(Style::fontCricket),
            x if x == Style::fontCursive as u16 => Ok(Style::fontCursive),
            x if x == Style::fontCyberlarge as u16 => Ok(Style::fontCyberlarge),
            x if x == Style::fontCybermedium as u16 => Ok(Style::fontCybermedium),
            x if x == Style::fontCybersmall as u16 => Ok(Style::fontCybersmall),
            x if x == Style::fontCygnet as u16 => Ok(Style::fontCygnet),
            x if x == Style::fontDanc4 as u16 => Ok(Style::fontDanc4),
            x if x == Style::fontDosRebel as u16 => Ok(Style::fontDosRebel),
            x if x == Style::fontDwhistled as u16 => Ok(Style::fontDwhistled),
            x if x == Style::fontDancingFont as u16 => Ok(Style::fontDancingFont),
            x if x == Style::fontDecimal as u16 => Ok(Style::fontDecimal),
            x if x == Style::fontDefLeppard as u16 => Ok(Style::fontDefLeppard),
            x if x == Style::fontDeltaCorpsPriest1 as u16 => Ok(Style::fontDeltaCorpsPriest1),
            x if x == Style::fontDiamond as u16 => Ok(Style::fontDiamond),
            x if x == Style::fontDietCola as u16 => Ok(Style::fontDietCola),
            x if x == Style::fontDigital as u16 => Ok(Style::fontDigital),
            x if x == Style::fontDoh as u16 => Ok(Style::fontDoh),
            x if x == Style::fontDoom as u16 => Ok(Style::fontDoom),
            x if x == Style::fontDotMatrix as u16 => Ok(Style::fontDotMatrix),
            x if x == Style::fontDoubleShorts as u16 => Ok(Style::fontDoubleShorts),
            x if x == Style::fontDouble as u16 => Ok(Style::fontDouble),
            x if x == Style::fontDrPepper as u16 => Ok(Style::fontDrPepper),
            x if x == Style::fontEftiChess as u16 => Ok(Style::fontEftiChess),
            x if x == Style::fontEftiFont as u16 => Ok(Style::fontEftiFont),
            x if x == Style::fontEftiItalic as u16 => Ok(Style::fontEftiItalic),
            x if x == Style::fontEftiPiti as u16 => Ok(Style::fontEftiPiti),
            x if x == Style::fontEftiRobot as u16 => Ok(Style::fontEftiRobot),
            x if x == Style::fontEftiWall as u16 => Ok(Style::fontEftiWall),
            x if x == Style::fontEftiWater as u16 => Ok(Style::fontEftiWater),
            x if x == Style::fontElectronic as u16 => Ok(Style::fontElectronic),
            x if x == Style::fontElite as u16 => Ok(Style::fontElite),
            x if x == Style::fontEpic as u16 => Ok(Style::fontEpic),
            x if x == Style::fontFender as u16 => Ok(Style::fontFender),
            x if x == Style::fontFilter as u16 => Ok(Style::fontFilter),
            x if x == Style::fontFireFontK as u16 => Ok(Style::fontFireFontK),
            x if x == Style::fontFireFontS as u16 => Ok(Style::fontFireFontS),
            x if x == Style::fontFlipped as u16 => Ok(Style::fontFlipped),
            x if x == Style::fontFlowerPower as u16 => Ok(Style::fontFlowerPower),
            x if x == Style::fontFourTops as u16 => Ok(Style::fontFourTops),
            x if x == Style::fontFraktur as u16 => Ok(Style::fontFraktur),
            x if x == Style::fontFunFace as u16 => Ok(Style::fontFunFace),
            x if x == Style::fontFunFaces as u16 => Ok(Style::fontFunFaces),
            x if x == Style::fontFuzzy as u16 => Ok(Style::fontFuzzy),
            x if x == Style::fontGeorgi16 as u16 => Ok(Style::fontGeorgi16),
            x if x == Style::fontGeorgia11 as u16 => Ok(Style::fontGeorgia11),
            x if x == Style::fontGhost as u16 => Ok(Style::fontGhost),
            x if x == Style::fontGhoulish as u16 => Ok(Style::fontGhoulish),
            x if x == Style::fontGlenyn as u16 => Ok(Style::fontGlenyn),
            x if x == Style::fontGoofy as u16 => Ok(Style::fontGoofy),
            x if x == Style::fontGothic as u16 => Ok(Style::fontGothic),
            x if x == Style::fontGraceful as u16 => Ok(Style::fontGraceful),
            x if x == Style::fontGradient as u16 => Ok(Style::fontGradient),
            x if x == Style::fontGraffiti as u16 => Ok(Style::fontGraffiti),
            x if x == Style::fontGreek as u16 => Ok(Style::fontGreek),
            x if x == Style::fontHeartLeft as u16 => Ok(Style::fontHeartLeft),
            x if x == Style::fontHeartRight as u16 => Ok(Style::fontHeartRight),
            x if x == Style::fontHenry3D as u16 => Ok(Style::fontHenry3D),
            x if x == Style::fontHex as u16 => Ok(Style::fontHex),
            x if x == Style::fontHieroglyphs as u16 => Ok(Style::fontHieroglyphs),
            x if x == Style::fontHollywood as u16 => Ok(Style::fontHollywood),
            x if x == Style::fontHorizontalLeft as u16 => Ok(Style::fontHorizontalLeft),
            x if x == Style::fontHorizontalRight as u16 => Ok(Style::fontHorizontalRight),
            x if x == Style::fontIcl1900 as u16 => Ok(Style::fontIcl1900),
            x if x == Style::fontImpossible as u16 => Ok(Style::fontImpossible),
            x if x == Style::fontInvita as u16 => Ok(Style::fontInvita),
            x if x == Style::fontIsometric1 as u16 => Ok(Style::fontIsometric1),
            x if x == Style::fontIsometric2 as u16 => Ok(Style::fontIsometric2),
            x if x == Style::fontIsometric3 as u16 => Ok(Style::fontIsometric3),
            x if x == Style::fontIsometric4 as u16 => Ok(Style::fontIsometric4),
            x if x == Style::fontItalic as u16 => Ok(Style::fontItalic),
            x if x == Style::fontIvrit as u16 => Ok(Style::fontIvrit),
            x if x == Style::fontJsBlockLetters as u16 => Ok(Style::fontJsBlockLetters),
            x if x == Style::fontJsBracketLetters as u16 => Ok(Style::fontJsBracketLetters),
            x if x == Style::fontJsCapitalCurves as u16 => Ok(Style::fontJsCapitalCurves),
            x if x == Style::fontJsCursive as u16 => Ok(Style::fontJsCursive),
            x if x == Style::fontJsStickLetters as u16 => Ok(Style::fontJsStickLetters),
            x if x == Style::fontJacky as u16 => Ok(Style::fontJacky),
            x if x == Style::fontJazmine as u16 => Ok(Style::fontJazmine),
            x if x == Style::fontJerusalem as u16 => Ok(Style::fontJerusalem),
            x if x == Style::fontKatakana as u16 => Ok(Style::fontKatakana),
            x if x == Style::fontKban as u16 => Ok(Style::fontKban),
            x if x == Style::fontKeyboard as u16 => Ok(Style::fontKeyboard),
            x if x == Style::fontKnob as u16 => Ok(Style::fontKnob),
            x if x == Style::fontKontoSlant as u16 => Ok(Style::fontKontoSlant),
            x if x == Style::fontKonto as u16 => Ok(Style::fontKonto),
            x if x == Style::fontLcd as u16 => Ok(Style::fontLcd),
            x if x == Style::fontLarry3D2 as u16 => Ok(Style::fontLarry3D2),
            x if x == Style::fontLarry3D as u16 => Ok(Style::fontLarry3D),
            x if x == Style::fontLean as u16 => Ok(Style::fontLean),
            x if x == Style::fontLetters as u16 => Ok(Style::fontLetters),
            x if x == Style::fontLilDevil as u16 => Ok(Style::fontLilDevil),
            x if x == Style::fontLineBlocks as u16 => Ok(Style::fontLineBlocks),
            x if x == Style::fontLinux as u16 => Ok(Style::fontLinux),
            x if x == Style::fontLockergnome as u16 => Ok(Style::fontLockergnome),
            x if x == Style::fontMadrid as u16 => Ok(Style::fontMadrid),
            x if x == Style::fontMarquee as u16 => Ok(Style::fontMarquee),
            x if x == Style::fontMaxfour as u16 => Ok(Style::fontMaxfour),
            x if x == Style::fontMerlin1 as u16 => Ok(Style::fontMerlin1),
            x if x == Style::fontMerlin2 as u16 => Ok(Style::fontMerlin2),
            x if x == Style::fontMike as u16 => Ok(Style::fontMike),
            x if x == Style::fontMini as u16 => Ok(Style::fontMini),
            x if x == Style::fontMirror as u16 => Ok(Style::fontMirror),
            x if x == Style::fontMnemonic as u16 => Ok(Style::fontMnemonic),
            x if x == Style::fontModular as u16 => Ok(Style::fontModular),
            x if x == Style::fontMorse as u16 => Ok(Style::fontMorse),
            x if x == Style::fontMorse2 as u16 => Ok(Style::fontMorse2),
            x if x == Style::fontMoscow as u16 => Ok(Style::fontMoscow),
            x if x == Style::fontMshebrew210 as u16 => Ok(Style::fontMshebrew210),
            x if x == Style::fontMuzzle as u16 => Ok(Style::fontMuzzle),
            x if x == Style::fontNscript as u16 => Ok(Style::fontNscript),
            x if x == Style::fontNtGreek as u16 => Ok(Style::fontNtGreek),
            x if x == Style::fontNvScript as u16 => Ok(Style::fontNvScript),
            x if x == Style::fontNancyjFancy as u16 => Ok(Style::fontNancyjFancy),
            x if x == Style::fontNancyjImproved as u16 => Ok(Style::fontNancyjImproved),
            x if x == Style::fontNancyjUnderlined as u16 => Ok(Style::fontNancyjUnderlined),
            x if x == Style::fontNancyj as u16 => Ok(Style::fontNancyj),
            x if x == Style::fontNipples as u16 => Ok(Style::fontNipples),
            x if x == Style::fontO8 as u16 => Ok(Style::fontO8),
            x if x == Style::fontOs2 as u16 => Ok(Style::fontOs2),
            x if x == Style::fontOctal as u16 => Ok(Style::fontOctal),
            x if x == Style::fontOgre as u16 => Ok(Style::fontOgre),
            x if x == Style::fontOldBanner as u16 => Ok(Style::fontOldBanner),
            x if x == Style::fontPagga as u16 => Ok(Style::fontPagga),
            x if x == Style::fontPatorjksCheese as u16 => Ok(Style::fontPatorjksCheese),
            x if x == Style::fontPatorjkHex as u16 => Ok(Style::fontPatorjkHex),
            x if x == Style::fontPawp as u16 => Ok(Style::fontPawp),
            x if x == Style::fontPeaksSlant as u16 => Ok(Style::fontPeaksSlant),
            x if x == Style::fontPeaks as u16 => Ok(Style::fontPeaks),
            x if x == Style::fontPebbles as u16 => Ok(Style::fontPebbles),
            x if x == Style::fontPepper as u16 => Ok(Style::fontPepper),
            x if x == Style::fontPoison as u16 => Ok(Style::fontPoison),
            x if x == Style::fontPuffy as u16 => Ok(Style::fontPuffy),
            x if x == Style::fontPuzzle as u16 => Ok(Style::fontPuzzle),
            x if x == Style::fontPyramid as u16 => Ok(Style::fontPyramid),
            x if x == Style::fontRammstein as u16 => Ok(Style::fontRammstein),
            x if x == Style::fontRectangles as u16 => Ok(Style::fontRectangles),
            x if x == Style::fontRedPhoenix as u16 => Ok(Style::fontRedPhoenix),
            x if x == Style::fontRelief as u16 => Ok(Style::fontRelief),
            x if x == Style::fontRelief2 as u16 => Ok(Style::fontRelief2),
            x if x == Style::fontReverse as u16 => Ok(Style::fontReverse),
            x if x == Style::fontRoman as u16 => Ok(Style::fontRoman),
            x if x == Style::fontRot13 as u16 => Ok(Style::fontRot13),
            x if x == Style::fontRotated as u16 => Ok(Style::fontRotated),
            x if x == Style::fontRounded as u16 => Ok(Style::fontRounded),
            x if x == Style::fontRowanCap as u16 => Ok(Style::fontRowanCap),
            x if x == Style::fontRozzo as u16 => Ok(Style::fontRozzo),
            x if x == Style::fontRunic as u16 => Ok(Style::fontRunic),
            x if x == Style::fontRunyc as u16 => Ok(Style::fontRunyc),
            x if x == Style::fontSBlood as u16 => Ok(Style::fontSBlood),
            x if x == Style::fontSlScript as u16 => Ok(Style::fontSlScript),
            x if x == Style::fontSantaClara as u16 => Ok(Style::fontSantaClara),
            x if x == Style::fontScript as u16 => Ok(Style::fontScript),
            x if x == Style::fontSerifcap as u16 => Ok(Style::fontSerifcap),
            x if x == Style::fontShadow as u16 => Ok(Style::fontShadow),
            x if x == Style::fontShimrod as u16 => Ok(Style::fontShimrod),
            x if x == Style::fontShort as u16 => Ok(Style::fontShort),
            x if x == Style::fontSlantRelief as u16 => Ok(Style::fontSlantRelief),
            x if x == Style::fontSlant as u16 => Ok(Style::fontSlant),
            x if x == Style::fontSlide as u16 => Ok(Style::fontSlide),
            x if x == Style::fontSmallCaps as u16 => Ok(Style::fontSmallCaps),
            x if x == Style::fontSmallIsometric1 as u16 => Ok(Style::fontSmallIsometric1),
            x if x == Style::fontSmallKeyboard as u16 => Ok(Style::fontSmallKeyboard),
            x if x == Style::fontSmallPoison as u16 => Ok(Style::fontSmallPoison),
            x if x == Style::fontSmallScript as u16 => Ok(Style::fontSmallScript),
            x if x == Style::fontSmallShadow as u16 => Ok(Style::fontSmallShadow),
            x if x == Style::fontSmallSlant as u16 => Ok(Style::fontSmallSlant),
            x if x == Style::fontSmallTengwar as u16 => Ok(Style::fontSmallTengwar),
            x if x == Style::fontSmall as u16 => Ok(Style::fontSmall),
            x if x == Style::fontSoft as u16 => Ok(Style::fontSoft),
            x if x == Style::fontSpeed as u16 => Ok(Style::fontSpeed),
            x if x == Style::fontSpliff as u16 => Ok(Style::fontSpliff),
            x if x == Style::fontStacey as u16 => Ok(Style::fontStacey),
            x if x == Style::fontStampate as u16 => Ok(Style::fontStampate),
            x if x == Style::fontStampatello as u16 => Ok(Style::fontStampatello),
            x if x == Style::fontStandard as u16 => Ok(Style::fontStandard),
            x if x == Style::fontStarStrips as u16 => Ok(Style::fontStarStrips),
            x if x == Style::fontStarWars as u16 => Ok(Style::fontStarWars),
            x if x == Style::fontStellar as u16 => Ok(Style::fontStellar),
            x if x == Style::fontStforek as u16 => Ok(Style::fontStforek),
            x if x == Style::fontStickLetters as u16 => Ok(Style::fontStickLetters),
            x if x == Style::fontStop as u16 => Ok(Style::fontStop),
            x if x == Style::fontStraight as u16 => Ok(Style::fontStraight),
            x if x == Style::fontStrongerThanAll as u16 => Ok(Style::fontStrongerThanAll),
            x if x == Style::fontSubZero as u16 => Ok(Style::fontSubZero),
            x if x == Style::fontSwampLand as u16 => Ok(Style::fontSwampLand),
            x if x == Style::fontSwan as u16 => Ok(Style::fontSwan),
            x if x == Style::fontSweet as u16 => Ok(Style::fontSweet),
            x if x == Style::fontThis as u16 => Ok(Style::fontThis),
            x if x == Style::fontTanja as u16 => Ok(Style::fontTanja),
            x if x == Style::fontTengwar as u16 => Ok(Style::fontTengwar),
            x if x == Style::fontTerm as u16 => Ok(Style::fontTerm),
            x if x == Style::fontTest1 as u16 => Ok(Style::fontTest1),
            x if x == Style::fontTheEdge as u16 => Ok(Style::fontTheEdge),
            x if x == Style::fontThick as u16 => Ok(Style::fontThick),
            x if x == Style::fontThin as u16 => Ok(Style::fontThin),
            x if x == Style::fontThorned as u16 => Ok(Style::fontThorned),
            x if x == Style::fontThreePoint as u16 => Ok(Style::fontThreePoint),
            x if x == Style::fontTicksSlant as u16 => Ok(Style::fontTicksSlant),
            x if x == Style::fontTicks as u16 => Ok(Style::fontTicks),
            x if x == Style::fontTiles as u16 => Ok(Style::fontTiles),
            x if x == Style::fontTinkerToy as u16 => Ok(Style::fontTinkerToy),
            x if x == Style::fontTombstone as u16 => Ok(Style::fontTombstone),
            x if x == Style::fontTrain as u16 => Ok(Style::fontTrain),
            x if x == Style::fontTrek as u16 => Ok(Style::fontTrek),
            x if x == Style::fontTsalagi as u16 => Ok(Style::fontTsalagi),
            x if x == Style::fontTubular as u16 => Ok(Style::fontTubular),
            x if x == Style::fontTwisted as u16 => Ok(Style::fontTwisted),
            x if x == Style::fontTwoPoint as u16 => Ok(Style::fontTwoPoint),
            x if x == Style::fontUsaFlag as u16 => Ok(Style::fontUsaFlag),
            x if x == Style::fontUnivers as u16 => Ok(Style::fontUnivers),
            x if x == Style::fontVarsity as u16 => Ok(Style::fontVarsity),
            x if x == Style::fontWavy as u16 => Ok(Style::fontWavy),
            x if x == Style::fontWeird as u16 => Ok(Style::fontWeird),
            x if x == Style::fontWetLetter as u16 => Ok(Style::fontWetLetter),
            x if x == Style::fontWhimsy as u16 => Ok(Style::fontWhimsy),
            x if x == Style::fontWow as u16 => Ok(Style::fontWow),

            _ => Err(CustomProgramError::InvalidStyle.into()),
        }
    }
}

pub fn pick(style: u16) -> Result<(u8, CHARSET)> {
    match Style::try_from(style)? {
        Style::Font1Row => Ok((Font1Row::HEIGHT, Font1Row::SET)),
        Style::Font3D => Ok((Font3D::HEIGHT, Font3D::SET)),
        Style::Font3DDiagonal => Ok((Font3DDiagonal::HEIGHT, Font3DDiagonal::SET)),
        Style::Font3DAscii => Ok((Font3DAscii::HEIGHT, Font3DAscii::SET)),
        Style::Font3X5 => Ok((Font3X5::HEIGHT, Font3X5::SET)),
        Style::Font4Max => Ok((Font4Max::HEIGHT, Font4Max::SET)),
        Style::Font5LineOblique => Ok((Font5LineOblique::HEIGHT, Font5LineOblique::SET)),
        Style::FontAmc3Line => Ok((FontAmc3Line::HEIGHT, FontAmc3Line::SET)),
        Style::FontAmc3Liv1 => Ok((FontAmc3Liv1::HEIGHT, FontAmc3Liv1::SET)),
        Style::FontAmcAaa01 => Ok((FontAmcAaa01::HEIGHT, FontAmcAaa01::SET)),
        Style::FontAmcNeko => Ok((FontAmcNeko::HEIGHT, FontAmcNeko::SET)),
        Style::FontAmcRazor => Ok((FontAmcRazor::HEIGHT, FontAmcRazor::SET)),
        Style::FontAmcRazor2 => Ok((FontAmcRazor2::HEIGHT, FontAmcRazor2::SET)),
        Style::FontAmcSlash => Ok((FontAmcSlash::HEIGHT, FontAmcSlash::SET)),
        Style::FontAmcSlider => Ok((FontAmcSlider::HEIGHT, FontAmcSlider::SET)),
        Style::FontAmcThin => Ok((FontAmcThin::HEIGHT, FontAmcThin::SET)),
        Style::FontAmcTubes => Ok((FontAmcTubes::HEIGHT, FontAmcTubes::SET)),
        Style::FontAmcUntitled => Ok((FontAmcUntitled::HEIGHT, FontAmcUntitled::SET)),
        Style::FontAnsiRegular => Ok((FontAnsiRegular::HEIGHT, FontAnsiRegular::SET)),
        Style::FontAnsiShadow => Ok((FontAnsiShadow::HEIGHT, FontAnsiShadow::SET)),
        Style::FontAsciiNewRoman => Ok((FontAsciiNewRoman::HEIGHT, FontAsciiNewRoman::SET)),
        Style::FontAcrobatic => Ok((FontAcrobatic::HEIGHT, FontAcrobatic::SET)),
        Style::FontAlligator => Ok((FontAlligator::HEIGHT, FontAlligator::SET)),
        Style::FontAlligator2 => Ok((FontAlligator2::HEIGHT, FontAlligator2::SET)),
        Style::FontAlpha => Ok((FontAlpha::HEIGHT, FontAlpha::SET)),
        Style::FontAlphabet => Ok((FontAlphabet::HEIGHT, FontAlphabet::SET)),
        Style::FontArrows => Ok((FontArrows::HEIGHT, FontArrows::SET)),
        Style::FontAvatar => Ok((FontAvatar::HEIGHT, FontAvatar::SET)),
        Style::FontB1Ff => Ok((FontB1Ff::HEIGHT, FontB1Ff::SET)),
        Style::FontBanner => Ok((FontBanner::HEIGHT, FontBanner::SET)),
        Style::FontBanner3D => Ok((FontBanner3D::HEIGHT, FontBanner3D::SET)),
        Style::FontBanner3 => Ok((FontBanner3::HEIGHT, FontBanner3::SET)),
        Style::FontBanner4 => Ok((FontBanner4::HEIGHT, FontBanner4::SET)),
        Style::FontBarbwire => Ok((FontBarbwire::HEIGHT, FontBarbwire::SET)),
        Style::FontBasic => Ok((FontBasic::HEIGHT, FontBasic::SET)),
        Style::FontBear => Ok((FontBear::HEIGHT, FontBear::SET)),
        Style::FontBell => Ok((FontBell::HEIGHT, FontBell::SET)),
        Style::FontBenjamin => Ok((FontBenjamin::HEIGHT, FontBenjamin::SET)),
        Style::FontBigChief => Ok((FontBigChief::HEIGHT, FontBigChief::SET)),
        Style::FontBigMoneyNe => Ok((FontBigMoneyNe::HEIGHT, FontBigMoneyNe::SET)),
        Style::FontBigMoneyNw => Ok((FontBigMoneyNw::HEIGHT, FontBigMoneyNw::SET)),
        Style::FontBigMoneySe => Ok((FontBigMoneySe::HEIGHT, FontBigMoneySe::SET)),
        Style::FontBigMoneySw => Ok((FontBigMoneySw::HEIGHT, FontBigMoneySw::SET)),
        Style::FontBig => Ok((FontBig::HEIGHT, FontBig::SET)),
        Style::FontBigfig => Ok((FontBigfig::HEIGHT, FontBigfig::SET)),
        Style::FontBinary => Ok((FontBinary::HEIGHT, FontBinary::SET)),
        Style::FontBlock => Ok((FontBlock::HEIGHT, FontBlock::SET)),
        Style::FontBlocks => Ok((FontBlocks::HEIGHT, FontBlocks::SET)),
        Style::FontBloody => Ok((FontBloody::HEIGHT, FontBloody::SET)),
        Style::FontBolger => Ok((FontBolger::HEIGHT, FontBolger::SET)),
        Style::FontBraced => Ok((FontBraced::HEIGHT, FontBraced::SET)),
        Style::FontBright => Ok((FontBright::HEIGHT, FontBright::SET)),
        Style::FontBroadwayKb => Ok((FontBroadwayKb::HEIGHT, FontBroadwayKb::SET)),
        Style::FontBroadway => Ok((FontBroadway::HEIGHT, FontBroadway::SET)),
        Style::FontBubble => Ok((FontBubble::HEIGHT, FontBubble::SET)),
        Style::FontBulbhead => Ok((FontBulbhead::HEIGHT, FontBulbhead::SET)),
        Style::FontCaligraphy => Ok((FontCaligraphy::HEIGHT, FontCaligraphy::SET)),
        Style::FontCaligraphy2 => Ok((FontCaligraphy2::HEIGHT, FontCaligraphy2::SET)),
        Style::FontCalvinS => Ok((FontCalvinS::HEIGHT, FontCalvinS::SET)),
        Style::FontCards => Ok((FontCards::HEIGHT, FontCards::SET)),
        Style::FontCatwalk => Ok((FontCatwalk::HEIGHT, FontCatwalk::SET)),
        Style::FontChiseled => Ok((FontChiseled::HEIGHT, FontChiseled::SET)),
        Style::FontChunky => Ok((FontChunky::HEIGHT, FontChunky::SET)),
        Style::FontCoinstak => Ok((FontCoinstak::HEIGHT, FontCoinstak::SET)),
        Style::FontCola => Ok((FontCola::HEIGHT, FontCola::SET)),
        Style::FontColossal => Ok((FontColossal::HEIGHT, FontColossal::SET)),
        Style::FontComputer => Ok((FontComputer::HEIGHT, FontComputer::SET)),
        Style::FontContessa => Ok((FontContessa::HEIGHT, FontContessa::SET)),
        Style::FontContrast => Ok((FontContrast::HEIGHT, FontContrast::SET)),
        Style::FontCosmike => Ok((FontCosmike::HEIGHT, FontCosmike::SET)),
        Style::FontCrawford => Ok((FontCrawford::HEIGHT, FontCrawford::SET)),
        Style::FontCrawford2 => Ok((FontCrawford2::HEIGHT, FontCrawford2::SET)),
        Style::FontCrazy => Ok((FontCrazy::HEIGHT, FontCrazy::SET)),
        Style::FontCricket => Ok((FontCricket::HEIGHT, FontCricket::SET)),
        Style::FontCursive => Ok((FontCursive::HEIGHT, FontCursive::SET)),
        Style::FontCyberlarge => Ok((FontCyberlarge::HEIGHT, FontCyberlarge::SET)),
        Style::FontCybermedium => Ok((FontCybermedium::HEIGHT, FontCybermedium::SET)),
        Style::FontCybersmall => Ok((FontCybersmall::HEIGHT, FontCybersmall::SET)),
        Style::FontCygnet => Ok((FontCygnet::HEIGHT, FontCygnet::SET)),
        Style::FontDanc4 => Ok((FontDanc4::HEIGHT, FontDanc4::SET)),
        Style::FontDosRebel => Ok((FontDosRebel::HEIGHT, FontDosRebel::SET)),
        Style::FontDwhistled => Ok((FontDwhistled::HEIGHT, FontDwhistled::SET)),
        Style::FontDancingFont => Ok((FontDancingFont::HEIGHT, FontDancingFont::SET)),
        Style::FontDecimal => Ok((FontDecimal::HEIGHT, FontDecimal::SET)),
        Style::FontDefLeppard => Ok((FontDefLeppard::HEIGHT, FontDefLeppard::SET)),
        Style::FontDeltaCorpsPriest1 => {
            Ok((FontDeltaCorpsPriest1::HEIGHT, FontDeltaCorpsPriest1::SET))
        }
        Style::FontDiamond => Ok((FontDiamond::HEIGHT, FontDiamond::SET)),
        Style::FontDietCola => Ok((FontDietCola::HEIGHT, FontDietCola::SET)),
        Style::FontDigital => Ok((FontDigital::HEIGHT, FontDigital::SET)),
        Style::FontDoh => Ok((FontDoh::HEIGHT, FontDoh::SET)),
        Style::FontDoom => Ok((FontDoom::HEIGHT, FontDoom::SET)),
        Style::FontDotMatrix => Ok((FontDotMatrix::HEIGHT, FontDotMatrix::SET)),
        Style::FontDoubleShorts => Ok((FontDoubleShorts::HEIGHT, FontDoubleShorts::SET)),
        Style::FontDouble => Ok((FontDouble::HEIGHT, FontDouble::SET)),
        Style::FontDrPepper => Ok((FontDrPepper::HEIGHT, FontDrPepper::SET)),
        Style::FontEftiChess => Ok((FontEftiChess::HEIGHT, FontEftiChess::SET)),
        Style::FontEftiFont => Ok((FontEftiFont::HEIGHT, FontEftiFont::SET)),
        Style::FontEftiItalic => Ok((FontEftiItalic::HEIGHT, FontEftiItalic::SET)),
        Style::FontEftiPiti => Ok((FontEftiPiti::HEIGHT, FontEftiPiti::SET)),
        Style::FontEftiRobot => Ok((FontEftiRobot::HEIGHT, FontEftiRobot::SET)),
        Style::FontEftiWall => Ok((FontEftiWall::HEIGHT, FontEftiWall::SET)),
        Style::FontEftiWater => Ok((FontEftiWater::HEIGHT, FontEftiWater::SET)),
        Style::FontElectronic => Ok((FontElectronic::HEIGHT, FontElectronic::SET)),
        Style::FontElite => Ok((FontElite::HEIGHT, FontElite::SET)),
        Style::FontEpic => Ok((FontEpic::HEIGHT, FontEpic::SET)),
        Style::FontFender => Ok((FontFender::HEIGHT, FontFender::SET)),
        Style::FontFilter => Ok((FontFilter::HEIGHT, FontFilter::SET)),
        Style::FontFireFontK => Ok((FontFireFontK::HEIGHT, FontFireFontK::SET)),
        Style::FontFireFontS => Ok((FontFireFontS::HEIGHT, FontFireFontS::SET)),
        Style::FontFlipped => Ok((FontFlipped::HEIGHT, FontFlipped::SET)),
        Style::FontFlowerPower => Ok((FontFlowerPower::HEIGHT, FontFlowerPower::SET)),
        Style::FontFourTops => Ok((FontFourTops::HEIGHT, FontFourTops::SET)),
        Style::FontFraktur => Ok((FontFraktur::HEIGHT, FontFraktur::SET)),
        Style::FontFunFace => Ok((FontFunFace::HEIGHT, FontFunFace::SET)),
        Style::FontFunFaces => Ok((FontFunFaces::HEIGHT, FontFunFaces::SET)),
        Style::FontFuzzy => Ok((FontFuzzy::HEIGHT, FontFuzzy::SET)),
        Style::FontGeorgi16 => Ok((FontGeorgi16::HEIGHT, FontGeorgi16::SET)),
        Style::FontGeorgia11 => Ok((FontGeorgia11::HEIGHT, FontGeorgia11::SET)),
        Style::FontGhost => Ok((FontGhost::HEIGHT, FontGhost::SET)),
        Style::FontGhoulish => Ok((FontGhoulish::HEIGHT, FontGhoulish::SET)),
        Style::FontGlenyn => Ok((FontGlenyn::HEIGHT, FontGlenyn::SET)),
        Style::FontGoofy => Ok((FontGoofy::HEIGHT, FontGoofy::SET)),
        Style::FontGothic => Ok((FontGothic::HEIGHT, FontGothic::SET)),
        Style::FontGraceful => Ok((FontGraceful::HEIGHT, FontGraceful::SET)),
        Style::FontGradient => Ok((FontGradient::HEIGHT, FontGradient::SET)),
        Style::FontGraffiti => Ok((FontGraffiti::HEIGHT, FontGraffiti::SET)),
        Style::FontGreek => Ok((FontGreek::HEIGHT, FontGreek::SET)),
        Style::FontHeartLeft => Ok((FontHeartLeft::HEIGHT, FontHeartLeft::SET)),
        Style::FontHeartRight => Ok((FontHeartRight::HEIGHT, FontHeartRight::SET)),
        Style::FontHenry3D => Ok((FontHenry3D::HEIGHT, FontHenry3D::SET)),
        Style::FontHex => Ok((FontHex::HEIGHT, FontHex::SET)),
        Style::FontHieroglyphs => Ok((FontHieroglyphs::HEIGHT, FontHieroglyphs::SET)),
        Style::FontHollywood => Ok((FontHollywood::HEIGHT, FontHollywood::SET)),
        Style::FontHorizontalLeft => Ok((FontHorizontalLeft::HEIGHT, FontHorizontalLeft::SET)),
        Style::FontHorizontalRight => Ok((FontHorizontalRight::HEIGHT, FontHorizontalRight::SET)),
        Style::FontIcl1900 => Ok((FontIcl1900::HEIGHT, FontIcl1900::SET)),
        Style::FontImpossible => Ok((FontImpossible::HEIGHT, FontImpossible::SET)),
        Style::FontInvita => Ok((FontInvita::HEIGHT, FontInvita::SET)),
        Style::FontIsometric1 => Ok((FontIsometric1::HEIGHT, FontIsometric1::SET)),
        Style::FontIsometric2 => Ok((FontIsometric2::HEIGHT, FontIsometric2::SET)),
        Style::FontIsometric3 => Ok((FontIsometric3::HEIGHT, FontIsometric3::SET)),
        Style::FontIsometric4 => Ok((FontIsometric4::HEIGHT, FontIsometric4::SET)),
        Style::FontItalic => Ok((FontItalic::HEIGHT, FontItalic::SET)),
        Style::FontIvrit => Ok((FontIvrit::HEIGHT, FontIvrit::SET)),
        Style::FontJsBlockLetters => Ok((FontJsBlockLetters::HEIGHT, FontJsBlockLetters::SET)),
        Style::FontJsBracketLetters => {
            Ok((FontJsBracketLetters::HEIGHT, FontJsBracketLetters::SET))
        }
        Style::FontJsCapitalCurves => Ok((FontJsCapitalCurves::HEIGHT, FontJsCapitalCurves::SET)),
        Style::FontJsCursive => Ok((FontJsCursive::HEIGHT, FontJsCursive::SET)),
        Style::FontJsStickLetters => Ok((FontJsStickLetters::HEIGHT, FontJsStickLetters::SET)),
        Style::FontJacky => Ok((FontJacky::HEIGHT, FontJacky::SET)),
        Style::FontJazmine => Ok((FontJazmine::HEIGHT, FontJazmine::SET)),
        Style::FontJerusalem => Ok((FontJerusalem::HEIGHT, FontJerusalem::SET)),
        Style::FontKatakana => Ok((FontKatakana::HEIGHT, FontKatakana::SET)),
        Style::FontKban => Ok((FontKban::HEIGHT, FontKban::SET)),
        Style::FontKeyboard => Ok((FontKeyboard::HEIGHT, FontKeyboard::SET)),
        Style::FontKnob => Ok((FontKnob::HEIGHT, FontKnob::SET)),
        Style::FontKontoSlant => Ok((FontKontoSlant::HEIGHT, FontKontoSlant::SET)),
        Style::FontKonto => Ok((FontKonto::HEIGHT, FontKonto::SET)),
        Style::FontLcd => Ok((FontLcd::HEIGHT, FontLcd::SET)),
        Style::FontLarry3D2 => Ok((FontLarry3D2::HEIGHT, FontLarry3D2::SET)),
        Style::FontLarry3D => Ok((FontLarry3D::HEIGHT, FontLarry3D::SET)),
        Style::FontLean => Ok((FontLean::HEIGHT, FontLean::SET)),
        Style::FontLetters => Ok((FontLetters::HEIGHT, FontLetters::SET)),
        Style::FontLilDevil => Ok((FontLilDevil::HEIGHT, FontLilDevil::SET)),
        Style::FontLineBlocks => Ok((FontLineBlocks::HEIGHT, FontLineBlocks::SET)),
        Style::FontLinux => Ok((FontLinux::HEIGHT, FontLinux::SET)),
        Style::FontLockergnome => Ok((FontLockergnome::HEIGHT, FontLockergnome::SET)),
        Style::FontMadrid => Ok((FontMadrid::HEIGHT, FontMadrid::SET)),
        Style::FontMarquee => Ok((FontMarquee::HEIGHT, FontMarquee::SET)),
        Style::FontMaxfour => Ok((FontMaxfour::HEIGHT, FontMaxfour::SET)),
        Style::FontMerlin1 => Ok((FontMerlin1::HEIGHT, FontMerlin1::SET)),
        Style::FontMerlin2 => Ok((FontMerlin2::HEIGHT, FontMerlin2::SET)),
        Style::FontMike => Ok((FontMike::HEIGHT, FontMike::SET)),
        Style::FontMini => Ok((FontMini::HEIGHT, FontMini::SET)),
        Style::FontMirror => Ok((FontMirror::HEIGHT, FontMirror::SET)),
        Style::FontMnemonic => Ok((FontMnemonic::HEIGHT, FontMnemonic::SET)),
        Style::FontModular => Ok((FontModular::HEIGHT, FontModular::SET)),
        Style::FontMorse => Ok((FontMorse::HEIGHT, FontMorse::SET)),
        Style::FontMorse2 => Ok((FontMorse2::HEIGHT, FontMorse2::SET)),
        Style::FontMoscow => Ok((FontMoscow::HEIGHT, FontMoscow::SET)),
        Style::FontMshebrew210 => Ok((FontMshebrew210::HEIGHT, FontMshebrew210::SET)),
        Style::FontMuzzle => Ok((FontMuzzle::HEIGHT, FontMuzzle::SET)),
        Style::FontNscript => Ok((FontNscript::HEIGHT, FontNscript::SET)),
        Style::FontNtGreek => Ok((FontNtGreek::HEIGHT, FontNtGreek::SET)),
        Style::FontNvScript => Ok((FontNvScript::HEIGHT, FontNvScript::SET)),
        Style::FontNancyjFancy => Ok((FontNancyjFancy::HEIGHT, FontNancyjFancy::SET)),
        Style::FontNancyjImproved => Ok((FontNancyjImproved::HEIGHT, FontNancyjImproved::SET)),
        Style::FontNancyjUnderlined => {
            Ok((FontNancyjUnderlined::HEIGHT, FontNancyjUnderlined::SET))
        }
        Style::FontNancyj => Ok((FontNancyj::HEIGHT, FontNancyj::SET)),
        Style::FontNipples => Ok((FontNipples::HEIGHT, FontNipples::SET)),
        Style::FontO8 => Ok((FontO8::HEIGHT, FontO8::SET)),
        Style::FontOs2 => Ok((FontOs2::HEIGHT, FontOs2::SET)),
        Style::FontOctal => Ok((FontOctal::HEIGHT, FontOctal::SET)),
        Style::FontOgre => Ok((FontOgre::HEIGHT, FontOgre::SET)),
        Style::FontOldBanner => Ok((FontOldBanner::HEIGHT, FontOldBanner::SET)),
        Style::FontPagga => Ok((FontPagga::HEIGHT, FontPagga::SET)),
        Style::FontPatorjksCheese => Ok((FontPatorjksCheese::HEIGHT, FontPatorjksCheese::SET)),
        Style::FontPatorjkHex => Ok((FontPatorjkHex::HEIGHT, FontPatorjkHex::SET)),
        Style::FontPawp => Ok((FontPawp::HEIGHT, FontPawp::SET)),
        Style::FontPeaksSlant => Ok((FontPeaksSlant::HEIGHT, FontPeaksSlant::SET)),
        Style::FontPeaks => Ok((FontPeaks::HEIGHT, FontPeaks::SET)),
        Style::FontPebbles => Ok((FontPebbles::HEIGHT, FontPebbles::SET)),
        Style::FontPepper => Ok((FontPepper::HEIGHT, FontPepper::SET)),
        Style::FontPoison => Ok((FontPoison::HEIGHT, FontPoison::SET)),
        Style::FontPuffy => Ok((FontPuffy::HEIGHT, FontPuffy::SET)),
        Style::FontPuzzle => Ok((FontPuzzle::HEIGHT, FontPuzzle::SET)),
        Style::FontPyramid => Ok((FontPyramid::HEIGHT, FontPyramid::SET)),
        Style::FontRammstein => Ok((FontRammstein::HEIGHT, FontRammstein::SET)),
        Style::FontRectangles => Ok((FontRectangles::HEIGHT, FontRectangles::SET)),
        Style::FontRedPhoenix => Ok((FontRedPhoenix::HEIGHT, FontRedPhoenix::SET)),
        Style::FontRelief => Ok((FontRelief::HEIGHT, FontRelief::SET)),
        Style::FontRelief2 => Ok((FontRelief2::HEIGHT, FontRelief2::SET)),
        Style::FontReverse => Ok((FontReverse::HEIGHT, FontReverse::SET)),
        Style::FontRoman => Ok((FontRoman::HEIGHT, FontRoman::SET)),
        Style::FontRot13 => Ok((FontRot13::HEIGHT, FontRot13::SET)),
        Style::FontRotated => Ok((FontRotated::HEIGHT, FontRotated::SET)),
        Style::FontRounded => Ok((FontRounded::HEIGHT, FontRounded::SET)),
        Style::FontRowanCap => Ok((FontRowanCap::HEIGHT, FontRowanCap::SET)),
        Style::FontRozzo => Ok((FontRozzo::HEIGHT, FontRozzo::SET)),
        Style::FontRunic => Ok((FontRunic::HEIGHT, FontRunic::SET)),
        Style::FontRunyc => Ok((FontRunyc::HEIGHT, FontRunyc::SET)),
        Style::FontSBlood => Ok((FontSBlood::HEIGHT, FontSBlood::SET)),
        Style::FontSlScript => Ok((FontSlScript::HEIGHT, FontSlScript::SET)),
        Style::FontSantaClara => Ok((FontSantaClara::HEIGHT, FontSantaClara::SET)),
        Style::FontScript => Ok((FontScript::HEIGHT, FontScript::SET)),
        Style::FontSerifcap => Ok((FontSerifcap::HEIGHT, FontSerifcap::SET)),
        Style::FontShadow => Ok((FontShadow::HEIGHT, FontShadow::SET)),
        Style::FontShimrod => Ok((FontShimrod::HEIGHT, FontShimrod::SET)),
        Style::FontShort => Ok((FontShort::HEIGHT, FontShort::SET)),
        Style::FontSlantRelief => Ok((FontSlantRelief::HEIGHT, FontSlantRelief::SET)),
        Style::FontSlant => Ok((FontSlant::HEIGHT, FontSlant::SET)),
        Style::FontSlide => Ok((FontSlide::HEIGHT, FontSlide::SET)),
        Style::FontSmallCaps => Ok((FontSmallCaps::HEIGHT, FontSmallCaps::SET)),
        Style::FontSmallIsometric1 => Ok((FontSmallIsometric1::HEIGHT, FontSmallIsometric1::SET)),
        Style::FontSmallKeyboard => Ok((FontSmallKeyboard::HEIGHT, FontSmallKeyboard::SET)),
        Style::FontSmallPoison => Ok((FontSmallPoison::HEIGHT, FontSmallPoison::SET)),
        Style::FontSmallScript => Ok((FontSmallScript::HEIGHT, FontSmallScript::SET)),
        Style::FontSmallShadow => Ok((FontSmallShadow::HEIGHT, FontSmallShadow::SET)),
        Style::FontSmallSlant => Ok((FontSmallSlant::HEIGHT, FontSmallSlant::SET)),
        Style::FontSmallTengwar => Ok((FontSmallTengwar::HEIGHT, FontSmallTengwar::SET)),
        Style::FontSmall => Ok((FontSmall::HEIGHT, FontSmall::SET)),
        Style::FontSoft => Ok((FontSoft::HEIGHT, FontSoft::SET)),
        Style::FontSpeed => Ok((FontSpeed::HEIGHT, FontSpeed::SET)),
        Style::FontSpliff => Ok((FontSpliff::HEIGHT, FontSpliff::SET)),
        Style::FontStacey => Ok((FontStacey::HEIGHT, FontStacey::SET)),
        Style::FontStampate => Ok((FontStampate::HEIGHT, FontStampate::SET)),
        Style::FontStampatello => Ok((FontStampatello::HEIGHT, FontStampatello::SET)),
        Style::FontStandard => Ok((FontStandard::HEIGHT, FontStandard::SET)),
        Style::FontStarStrips => Ok((FontStarStrips::HEIGHT, FontStarStrips::SET)),
        Style::FontStarWars => Ok((FontStarWars::HEIGHT, FontStarWars::SET)),
        Style::FontStellar => Ok((FontStellar::HEIGHT, FontStellar::SET)),
        Style::FontStforek => Ok((FontStforek::HEIGHT, FontStforek::SET)),
        Style::FontStickLetters => Ok((FontStickLetters::HEIGHT, FontStickLetters::SET)),
        Style::FontStop => Ok((FontStop::HEIGHT, FontStop::SET)),
        Style::FontStraight => Ok((FontStraight::HEIGHT, FontStraight::SET)),
        Style::FontStrongerThanAll => Ok((FontStrongerThanAll::HEIGHT, FontStrongerThanAll::SET)),
        Style::FontSubZero => Ok((FontSubZero::HEIGHT, FontSubZero::SET)),
        Style::FontSwampLand => Ok((FontSwampLand::HEIGHT, FontSwampLand::SET)),
        Style::FontSwan => Ok((FontSwan::HEIGHT, FontSwan::SET)),
        Style::FontSweet => Ok((FontSweet::HEIGHT, FontSweet::SET)),
        Style::FontThis => Ok((FontThis::HEIGHT, FontThis::SET)),
        Style::FontTanja => Ok((FontTanja::HEIGHT, FontTanja::SET)),
        Style::FontTengwar => Ok((FontTengwar::HEIGHT, FontTengwar::SET)),
        Style::FontTerm => Ok((FontTerm::HEIGHT, FontTerm::SET)),
        Style::FontTest1 => Ok((FontTest1::HEIGHT, FontTest1::SET)),
        Style::FontTheEdge => Ok((FontTheEdge::HEIGHT, FontTheEdge::SET)),
        Style::FontThick => Ok((FontThick::HEIGHT, FontThick::SET)),
        Style::FontThin => Ok((FontThin::HEIGHT, FontThin::SET)),
        Style::FontThorned => Ok((FontThorned::HEIGHT, FontThorned::SET)),
        Style::FontThreePoint => Ok((FontThreePoint::HEIGHT, FontThreePoint::SET)),
        Style::FontTicksSlant => Ok((FontTicksSlant::HEIGHT, FontTicksSlant::SET)),
        Style::FontTicks => Ok((FontTicks::HEIGHT, FontTicks::SET)),
        Style::FontTiles => Ok((FontTiles::HEIGHT, FontTiles::SET)),
        Style::FontTinkerToy => Ok((FontTinkerToy::HEIGHT, FontTinkerToy::SET)),
        Style::FontTombstone => Ok((FontTombstone::HEIGHT, FontTombstone::SET)),
        Style::FontTrain => Ok((FontTrain::HEIGHT, FontTrain::SET)),
        Style::FontTrek => Ok((FontTrek::HEIGHT, FontTrek::SET)),
        Style::FontTsalagi => Ok((FontTsalagi::HEIGHT, FontTsalagi::SET)),
        Style::FontTubular => Ok((FontTubular::HEIGHT, FontTubular::SET)),
        Style::FontTwisted => Ok((FontTwisted::HEIGHT, FontTwisted::SET)),
        Style::FontTwoPoint => Ok((FontTwoPoint::HEIGHT, FontTwoPoint::SET)),
        Style::FontUsaFlag => Ok((FontUsaFlag::HEIGHT, FontUsaFlag::SET)),
        Style::FontUnivers => Ok((FontUnivers::HEIGHT, FontUnivers::SET)),
        Style::FontVarsity => Ok((FontVarsity::HEIGHT, FontVarsity::SET)),
        Style::FontWavy => Ok((FontWavy::HEIGHT, FontWavy::SET)),
        Style::FontWeird => Ok((FontWeird::HEIGHT, FontWeird::SET)),
        Style::FontWetLetter => Ok((FontWetLetter::HEIGHT, FontWetLetter::SET)),
        Style::FontWhimsy => Ok((FontWhimsy::HEIGHT, FontWhimsy::SET)),
        Style::FontWow => Ok((FontWow::HEIGHT, FontWow::SET)),
    }
}
