use super::{font_basic, CHARSET};
use crate::error::CustomProgramError;
use anchor_lang::prelude::*;

enum Style {
    Font1Row,
    Font3D,
    Font3DDiagonal,
    Font3DAscii,
    Font3X5,
    Font4Max,
    Font5LineOblique,
    FontAmc3Line,
    FontAmc3Liv1,
    FontAmcAaa01,
    FontAmcNeko,
    FontAmcRazor,
    FontAmcRazor2,
    FontAmcSlash,
    FontAmcSlider,
    FontAmcThin,
    FontAmcTubes,
    FontAmcUntitled,
    FontAnsiRegular,
    FontAnsiShadow,
    FontAsciiNewRoman,
    FontAcrobatic,
    FontAlligator,
    FontAlligator2,
    FontAlpha,
    FontAlphabet,
    FontArrows,
    FontAvatar,
    FontB1Ff,
    FontBanner,
    FontBanner3D,
    FontBanner3,
    FontBanner4,
    FontBarbwire,
    FontBasic,
    FontBear,
    FontBell,
    FontBenjamin,
    FontBigChief,
    FontBigMoneyNe,
    FontBigMoneyNw,
    FontBigMoneySe,
    FontBigMoneySw,
    FontBig,
    FontBigfig,
    FontBinary,
    FontBlock,
    FontBlocks,
    FontBloody,
    FontBolger,
    FontBraced,
    FontBright,
    FontBroadwayKb,
    FontBroadway,
    FontBubble,
    FontBulbhead,
    FontCaligraphy,
    FontCaligraphy2,
    FontCalvinS,
    FontCards,
    FontCatwalk,
    FontChiseled,
    FontChunky,
    FontCoinstak,
    FontCola,
    FontColossal,
    FontComputer,
    FontContessa,
    FontContrast,
    FontCosmike,
    FontCrawford,
    FontCrawford2,
    FontCrazy,
    FontCricket,
    FontCursive,
    FontCyberlarge,
    FontCybermedium,
    FontCybersmall,
    FontCygnet,
    FontDanc4,
    FontDosRebel,
    FontDwhistled,
    FontDancingFont,
    FontDecimal,
    FontDefLeppard,
    FontDeltaCorpsPriest1,
    FontDiamond,
    FontDietCola,
    FontDigital,
    FontDoh,
    FontDoom,
    FontDotMatrix,
    FontDoubleShorts,
    FontDouble,
    FontDrPepper,
    FontEftiFont,
    FontEftiItalic,
    FontEftiPiti,
    FontEftiRobot,
    FontEftiWall,
    FontEftiWater,
    FontElectronic,
    FontElite,
    FontEpic,
    FontFender,
    FontFilter,
    FontFireFontK,
    FontFireFontS,
    FontFlipped,
    FontFlowerPower,
    FontFourTops,
    FontFraktur,
    FontFunFace,
    FontFunFaces,
    FontFuzzy,
    FontGeorgi16,
    FontGeorgia11,
    FontGhost,
    FontGhoulish,
    FontGlenyn,
    FontGoofy,
    FontGothic,
    FontGraceful,
    FontGradient,
    FontGraffiti,
    FontGreek,
    FontHeartLeft,
    FontHeartRight,
    FontHenry3D,
    FontHex,
    FontHieroglyphs,
    FontHollywood,
    FontHorizontalLeft,
    FontHorizontalRight,
    FontIcl1900,
    FontImpossible,
    FontInvita,
    FontIsometric1,
    FontIsometric2,
    FontIsometric3,
    FontIsometric4,
    FontItalic,
    FontIvrit,
    FontJsBlockLetters,
    FontJsBracketLetters,
    FontJsCapitalCurves,
    FontJsCursive,
    FontJsStickLetters,
    FontJacky,
    FontJazmine,
    FontJerusalem,
    FontKatakana,
    FontKban,
    FontKeyboard,
    FontKnob,
    FontKontoSlant,
    FontKonto,
    FontLcd,
    FontLarry3D2,
    FontLarry3D,
    FontLean,
    FontLetters,
    FontLilDevil,
    FontLineBlocks,
    FontLinux,
    FontLockergnome,
    FontMadrid,
    FontMarquee,
    FontMaxfour,
    FontMerlin1,
    FontMerlin2,
    FontMike,
    FontMini,
    FontMirror,
    FontMnemonic,
    FontModular,
    FontMorse,
    FontMorse2,
    FontMoscow,
    FontMshebrew210,
    FontMuzzle,
    FontNscript,
    FontNtGreek,
    FontNvScript,
    FontNancyjFancy,
    FontNancyjImproved,
    FontNancyjUnderlined,
    FontNancyj,
    FontNipples,
    FontO8,
    FontOs2,
    FontOctal,
    FontOgre,
    FontOldBanner,
    FontPagga,
    FontPatorjksCheese,
    FontPatorjkHex,
    FontPawp,
    FontPeaksSlant,
    FontPeaks,
    FontPebbles,
    FontPepper,
    FontPoison,
    FontPuffy,
    FontPuzzle,
    FontPyramid,
    FontRammstein,
    FontRectangles,
    FontRedPhoenix,
    FontRelief,
    FontRelief2,
    FontReverse,
    FontRoman,
    FontRot13,
    FontRotated,
    FontRounded,
    FontRowanCap,
    FontRozzo,
    FontRunic,
    FontRunyc,
    FontSBlood,
    FontSlScript,
    FontSantaClara,
    FontScript,
    FontSerifcap,
    FontShadow,
    FontShimrod,
    FontShort,
    FontSlantRelief,
    FontSlant,
    FontSlide,
    FontSmallCaps,
    FontSmallIsometric1,
    FontSmallKeyboard,
    FontSmallPoison,
    FontSmallScript,
    FontSmallShadow,
    FontSmallSlant,
    FontSmallTengwar,
    FontSmall,
    FontSoft,
    FontSpeed,
    FontSpliff,
    FontStacey,
    FontStampate,
    FontStampatello,
    FontStandard,
    FontStarStrips,
    FontStarWars,
    FontStellar,
    FontStforek,
    FontStickLetters,
    FontStop,
    FontStraight,
    FontStrongerThanAll,
    FontSubZero,
    FontSwampLand,
    FontSwan,
    FontSweet,
    FontThis,
    FontTanja,
    FontTengwar,
    FontTerm,
    FontTest1,
    FontTheEdge,
    FontThick,
    FontThin,
    FontThorned,
    FontThreePoint,
    FontTicksSlant,
    FontTicks,
    FontTiles,
    FontTinkerToy,
    FontTombstone,
    FontTrain,
    FontTrek,
    FontTsalagi,
    FontTubular,
    FontTwisted,
    FontTwoPoint,
    FontUsaFlag,
    FontUnivers,
    FontVarsity,
    FontWavy,
    FontWeird,
    FontWetLetter,
    FontWhimsy,
    FontWow,
}

impl TryFrom<u16> for Style {
    type Error = CustomProgramError;

    fn try_from(v: u16) -> std::result::Result<Self, Self::Error> {
        match v {
            x if x == Style::Font1Row as u16 => Ok(Style::Font1Row),
            x if x == Style::Font3D as u16 => Ok(Style::Font3D),
            x if x == Style::Font3DDiagonal as u16 => Ok(Style::Font3DDiagonal),
            x if x == Style::Font3DAscii as u16 => Ok(Style::Font3DAscii),
            x if x == Style::Font3X5 as u16 => Ok(Style::Font3X5),
            x if x == Style::Font4Max as u16 => Ok(Style::Font4Max),
            x if x == Style::Font5LineOblique as u16 => Ok(Style::Font5LineOblique),
            x if x == Style::FontAmc3Line as u16 => Ok(Style::FontAmc3Line),
            x if x == Style::FontAmc3Liv1 as u16 => Ok(Style::FontAmc3Liv1),
            x if x == Style::FontAmcAaa01 as u16 => Ok(Style::FontAmcAaa01),
            x if x == Style::FontAmcNeko as u16 => Ok(Style::FontAmcNeko),
            x if x == Style::FontAmcRazor as u16 => Ok(Style::FontAmcRazor),
            x if x == Style::FontAmcRazor2 as u16 => Ok(Style::FontAmcRazor2),
            x if x == Style::FontAmcSlash as u16 => Ok(Style::FontAmcSlash),
            x if x == Style::FontAmcSlider as u16 => Ok(Style::FontAmcSlider),
            x if x == Style::FontAmcThin as u16 => Ok(Style::FontAmcThin),
            x if x == Style::FontAmcTubes as u16 => Ok(Style::FontAmcTubes),
            x if x == Style::FontAmcUntitled as u16 => Ok(Style::FontAmcUntitled),
            x if x == Style::FontAnsiRegular as u16 => Ok(Style::FontAnsiRegular),
            x if x == Style::FontAnsiShadow as u16 => Ok(Style::FontAnsiShadow),
            x if x == Style::FontAsciiNewRoman as u16 => Ok(Style::FontAsciiNewRoman),
            x if x == Style::FontAcrobatic as u16 => Ok(Style::FontAcrobatic),
            x if x == Style::FontAlligator as u16 => Ok(Style::FontAlligator),
            x if x == Style::FontAlligator2 as u16 => Ok(Style::FontAlligator2),
            x if x == Style::FontAlpha as u16 => Ok(Style::FontAlpha),
            x if x == Style::FontAlphabet as u16 => Ok(Style::FontAlphabet),
            x if x == Style::FontArrows as u16 => Ok(Style::FontArrows),
            x if x == Style::FontAvatar as u16 => Ok(Style::FontAvatar),
            x if x == Style::FontB1Ff as u16 => Ok(Style::FontB1Ff),
            x if x == Style::FontBanner as u16 => Ok(Style::FontBanner),
            x if x == Style::FontBanner3D as u16 => Ok(Style::FontBanner3D),
            x if x == Style::FontBanner3 as u16 => Ok(Style::FontBanner3),
            x if x == Style::FontBanner4 as u16 => Ok(Style::FontBanner4),
            x if x == Style::FontBarbwire as u16 => Ok(Style::FontBarbwire),
            x if x == Style::FontBasic as u16 => Ok(Style::FontBasic),
            x if x == Style::FontBear as u16 => Ok(Style::FontBear),
            x if x == Style::FontBell as u16 => Ok(Style::FontBell),
            x if x == Style::FontBenjamin as u16 => Ok(Style::FontBenjamin),
            x if x == Style::FontBigChief as u16 => Ok(Style::FontBigChief),
            x if x == Style::FontBigMoneyNe as u16 => Ok(Style::FontBigMoneyNe),
            x if x == Style::FontBigMoneyNw as u16 => Ok(Style::FontBigMoneyNw),
            x if x == Style::FontBigMoneySe as u16 => Ok(Style::FontBigMoneySe),
            x if x == Style::FontBigMoneySw as u16 => Ok(Style::FontBigMoneySw),
            x if x == Style::FontBig as u16 => Ok(Style::FontBig),
            x if x == Style::FontBigfig as u16 => Ok(Style::FontBigfig),
            x if x == Style::FontBinary as u16 => Ok(Style::FontBinary),
            x if x == Style::FontBlock as u16 => Ok(Style::FontBlock),
            x if x == Style::FontBlocks as u16 => Ok(Style::FontBlocks),
            x if x == Style::FontBloody as u16 => Ok(Style::FontBloody),
            x if x == Style::FontBolger as u16 => Ok(Style::FontBolger),
            x if x == Style::FontBraced as u16 => Ok(Style::FontBraced),
            x if x == Style::FontBright as u16 => Ok(Style::FontBright),
            x if x == Style::FontBroadwayKb as u16 => Ok(Style::FontBroadwayKb),
            x if x == Style::FontBroadway as u16 => Ok(Style::FontBroadway),
            x if x == Style::FontBubble as u16 => Ok(Style::FontBubble),
            x if x == Style::FontBulbhead as u16 => Ok(Style::FontBulbhead),
            x if x == Style::FontCaligraphy as u16 => Ok(Style::FontCaligraphy),
            x if x == Style::FontCaligraphy2 as u16 => Ok(Style::FontCaligraphy2),
            x if x == Style::FontCalvinS as u16 => Ok(Style::FontCalvinS),
            x if x == Style::FontCards as u16 => Ok(Style::FontCards),
            x if x == Style::FontCatwalk as u16 => Ok(Style::FontCatwalk),
            x if x == Style::FontChiseled as u16 => Ok(Style::FontChiseled),
            x if x == Style::FontChunky as u16 => Ok(Style::FontChunky),
            x if x == Style::FontCoinstak as u16 => Ok(Style::FontCoinstak),
            x if x == Style::FontCola as u16 => Ok(Style::FontCola),
            x if x == Style::FontColossal as u16 => Ok(Style::FontColossal),
            x if x == Style::FontComputer as u16 => Ok(Style::FontComputer),
            x if x == Style::FontContessa as u16 => Ok(Style::FontContessa),
            x if x == Style::FontContrast as u16 => Ok(Style::FontContrast),
            x if x == Style::FontCosmike as u16 => Ok(Style::FontCosmike),
            x if x == Style::FontCrawford as u16 => Ok(Style::FontCrawford),
            x if x == Style::FontCrawford2 as u16 => Ok(Style::FontCrawford2),
            x if x == Style::FontCrazy as u16 => Ok(Style::FontCrazy),
            x if x == Style::FontCricket as u16 => Ok(Style::FontCricket),
            x if x == Style::FontCursive as u16 => Ok(Style::FontCursive),
            x if x == Style::FontCyberlarge as u16 => Ok(Style::FontCyberlarge),
            x if x == Style::FontCybermedium as u16 => Ok(Style::FontCybermedium),
            x if x == Style::FontCybersmall as u16 => Ok(Style::FontCybersmall),
            x if x == Style::FontCygnet as u16 => Ok(Style::FontCygnet),
            x if x == Style::FontDanc4 as u16 => Ok(Style::FontDanc4),
            x if x == Style::FontDosRebel as u16 => Ok(Style::FontDosRebel),
            x if x == Style::FontDwhistled as u16 => Ok(Style::FontDwhistled),
            x if x == Style::FontDancingFont as u16 => Ok(Style::FontDancingFont),
            x if x == Style::FontDecimal as u16 => Ok(Style::FontDecimal),
            x if x == Style::FontDefLeppard as u16 => Ok(Style::FontDefLeppard),
            x if x == Style::FontDeltaCorpsPriest1 as u16 => Ok(Style::FontDeltaCorpsPriest1),
            x if x == Style::FontDiamond as u16 => Ok(Style::FontDiamond),
            x if x == Style::FontDietCola as u16 => Ok(Style::FontDietCola),
            x if x == Style::FontDigital as u16 => Ok(Style::FontDigital),
            x if x == Style::FontDoh as u16 => Ok(Style::FontDoh),
            x if x == Style::FontDoom as u16 => Ok(Style::FontDoom),
            x if x == Style::FontDotMatrix as u16 => Ok(Style::FontDotMatrix),
            x if x == Style::FontDoubleShorts as u16 => Ok(Style::FontDoubleShorts),
            x if x == Style::FontDouble as u16 => Ok(Style::FontDouble),
            x if x == Style::FontDrPepper as u16 => Ok(Style::FontDrPepper),
            x if x == Style::FontEftiFont as u16 => Ok(Style::FontEftiFont),
            x if x == Style::FontEftiItalic as u16 => Ok(Style::FontEftiItalic),
            x if x == Style::FontEftiPiti as u16 => Ok(Style::FontEftiPiti),
            x if x == Style::FontEftiRobot as u16 => Ok(Style::FontEftiRobot),
            x if x == Style::FontEftiWall as u16 => Ok(Style::FontEftiWall),
            x if x == Style::FontEftiWater as u16 => Ok(Style::FontEftiWater),
            x if x == Style::FontElectronic as u16 => Ok(Style::FontElectronic),
            x if x == Style::FontElite as u16 => Ok(Style::FontElite),
            x if x == Style::FontEpic as u16 => Ok(Style::FontEpic),
            x if x == Style::FontFender as u16 => Ok(Style::FontFender),
            x if x == Style::FontFilter as u16 => Ok(Style::FontFilter),
            x if x == Style::FontFireFontK as u16 => Ok(Style::FontFireFontK),
            x if x == Style::FontFireFontS as u16 => Ok(Style::FontFireFontS),
            x if x == Style::FontFlipped as u16 => Ok(Style::FontFlipped),
            x if x == Style::FontFlowerPower as u16 => Ok(Style::FontFlowerPower),
            x if x == Style::FontFourTops as u16 => Ok(Style::FontFourTops),
            x if x == Style::FontFraktur as u16 => Ok(Style::FontFraktur),
            x if x == Style::FontFunFace as u16 => Ok(Style::FontFunFace),
            x if x == Style::FontFunFaces as u16 => Ok(Style::FontFunFaces),
            x if x == Style::FontFuzzy as u16 => Ok(Style::FontFuzzy),
            x if x == Style::FontGeorgi16 as u16 => Ok(Style::FontGeorgi16),
            x if x == Style::FontGeorgia11 as u16 => Ok(Style::FontGeorgia11),
            x if x == Style::FontGhost as u16 => Ok(Style::FontGhost),
            x if x == Style::FontGhoulish as u16 => Ok(Style::FontGhoulish),
            x if x == Style::FontGlenyn as u16 => Ok(Style::FontGlenyn),
            x if x == Style::FontGoofy as u16 => Ok(Style::FontGoofy),
            x if x == Style::FontGothic as u16 => Ok(Style::FontGothic),
            x if x == Style::FontGraceful as u16 => Ok(Style::FontGraceful),
            x if x == Style::FontGradient as u16 => Ok(Style::FontGradient),
            x if x == Style::FontGraffiti as u16 => Ok(Style::FontGraffiti),
            x if x == Style::FontGreek as u16 => Ok(Style::FontGreek),
            x if x == Style::FontHeartLeft as u16 => Ok(Style::FontHeartLeft),
            x if x == Style::FontHeartRight as u16 => Ok(Style::FontHeartRight),
            x if x == Style::FontHenry3D as u16 => Ok(Style::FontHenry3D),
            x if x == Style::FontHex as u16 => Ok(Style::FontHex),
            x if x == Style::FontHieroglyphs as u16 => Ok(Style::FontHieroglyphs),
            x if x == Style::FontHollywood as u16 => Ok(Style::FontHollywood),
            x if x == Style::FontHorizontalLeft as u16 => Ok(Style::FontHorizontalLeft),
            x if x == Style::FontHorizontalRight as u16 => Ok(Style::FontHorizontalRight),
            x if x == Style::FontIcl1900 as u16 => Ok(Style::FontIcl1900),
            x if x == Style::FontImpossible as u16 => Ok(Style::FontImpossible),
            x if x == Style::FontInvita as u16 => Ok(Style::FontInvita),
            x if x == Style::FontIsometric1 as u16 => Ok(Style::FontIsometric1),
            x if x == Style::FontIsometric2 as u16 => Ok(Style::FontIsometric2),
            x if x == Style::FontIsometric3 as u16 => Ok(Style::FontIsometric3),
            x if x == Style::FontIsometric4 as u16 => Ok(Style::FontIsometric4),
            x if x == Style::FontItalic as u16 => Ok(Style::FontItalic),
            x if x == Style::FontIvrit as u16 => Ok(Style::FontIvrit),
            x if x == Style::FontJsBlockLetters as u16 => Ok(Style::FontJsBlockLetters),
            x if x == Style::FontJsBracketLetters as u16 => Ok(Style::FontJsBracketLetters),
            x if x == Style::FontJsCapitalCurves as u16 => Ok(Style::FontJsCapitalCurves),
            x if x == Style::FontJsCursive as u16 => Ok(Style::FontJsCursive),
            x if x == Style::FontJsStickLetters as u16 => Ok(Style::FontJsStickLetters),
            x if x == Style::FontJacky as u16 => Ok(Style::FontJacky),
            x if x == Style::FontJazmine as u16 => Ok(Style::FontJazmine),
            x if x == Style::FontJerusalem as u16 => Ok(Style::FontJerusalem),
            x if x == Style::FontKatakana as u16 => Ok(Style::FontKatakana),
            x if x == Style::FontKban as u16 => Ok(Style::FontKban),
            x if x == Style::FontKeyboard as u16 => Ok(Style::FontKeyboard),
            x if x == Style::FontKnob as u16 => Ok(Style::FontKnob),
            x if x == Style::FontKontoSlant as u16 => Ok(Style::FontKontoSlant),
            x if x == Style::FontKonto as u16 => Ok(Style::FontKonto),
            x if x == Style::FontLcd as u16 => Ok(Style::FontLcd),
            x if x == Style::FontLarry3D2 as u16 => Ok(Style::FontLarry3D2),
            x if x == Style::FontLarry3D as u16 => Ok(Style::FontLarry3D),
            x if x == Style::FontLean as u16 => Ok(Style::FontLean),
            x if x == Style::FontLetters as u16 => Ok(Style::FontLetters),
            x if x == Style::FontLilDevil as u16 => Ok(Style::FontLilDevil),
            x if x == Style::FontLineBlocks as u16 => Ok(Style::FontLineBlocks),
            x if x == Style::FontLinux as u16 => Ok(Style::FontLinux),
            x if x == Style::FontLockergnome as u16 => Ok(Style::FontLockergnome),
            x if x == Style::FontMadrid as u16 => Ok(Style::FontMadrid),
            x if x == Style::FontMarquee as u16 => Ok(Style::FontMarquee),
            x if x == Style::FontMaxfour as u16 => Ok(Style::FontMaxfour),
            x if x == Style::FontMerlin1 as u16 => Ok(Style::FontMerlin1),
            x if x == Style::FontMerlin2 as u16 => Ok(Style::FontMerlin2),
            x if x == Style::FontMike as u16 => Ok(Style::FontMike),
            x if x == Style::FontMini as u16 => Ok(Style::FontMini),
            x if x == Style::FontMirror as u16 => Ok(Style::FontMirror),
            x if x == Style::FontMnemonic as u16 => Ok(Style::FontMnemonic),
            x if x == Style::FontModular as u16 => Ok(Style::FontModular),
            x if x == Style::FontMorse as u16 => Ok(Style::FontMorse),
            x if x == Style::FontMorse2 as u16 => Ok(Style::FontMorse2),
            x if x == Style::FontMoscow as u16 => Ok(Style::FontMoscow),
            x if x == Style::FontMshebrew210 as u16 => Ok(Style::FontMshebrew210),
            x if x == Style::FontMuzzle as u16 => Ok(Style::FontMuzzle),
            x if x == Style::FontNscript as u16 => Ok(Style::FontNscript),
            x if x == Style::FontNtGreek as u16 => Ok(Style::FontNtGreek),
            x if x == Style::FontNvScript as u16 => Ok(Style::FontNvScript),
            x if x == Style::FontNancyjFancy as u16 => Ok(Style::FontNancyjFancy),
            x if x == Style::FontNancyjImproved as u16 => Ok(Style::FontNancyjImproved),
            x if x == Style::FontNancyjUnderlined as u16 => Ok(Style::FontNancyjUnderlined),
            x if x == Style::FontNancyj as u16 => Ok(Style::FontNancyj),
            x if x == Style::FontNipples as u16 => Ok(Style::FontNipples),
            x if x == Style::FontO8 as u16 => Ok(Style::FontO8),
            x if x == Style::FontOs2 as u16 => Ok(Style::FontOs2),
            x if x == Style::FontOctal as u16 => Ok(Style::FontOctal),
            x if x == Style::FontOgre as u16 => Ok(Style::FontOgre),
            x if x == Style::FontOldBanner as u16 => Ok(Style::FontOldBanner),
            x if x == Style::FontPagga as u16 => Ok(Style::FontPagga),
            x if x == Style::FontPatorjksCheese as u16 => Ok(Style::FontPatorjksCheese),
            x if x == Style::FontPatorjkHex as u16 => Ok(Style::FontPatorjkHex),
            x if x == Style::FontPawp as u16 => Ok(Style::FontPawp),
            x if x == Style::FontPeaksSlant as u16 => Ok(Style::FontPeaksSlant),
            x if x == Style::FontPeaks as u16 => Ok(Style::FontPeaks),
            x if x == Style::FontPebbles as u16 => Ok(Style::FontPebbles),
            x if x == Style::FontPepper as u16 => Ok(Style::FontPepper),
            x if x == Style::FontPoison as u16 => Ok(Style::FontPoison),
            x if x == Style::FontPuffy as u16 => Ok(Style::FontPuffy),
            x if x == Style::FontPuzzle as u16 => Ok(Style::FontPuzzle),
            x if x == Style::FontPyramid as u16 => Ok(Style::FontPyramid),
            x if x == Style::FontRammstein as u16 => Ok(Style::FontRammstein),
            x if x == Style::FontRectangles as u16 => Ok(Style::FontRectangles),
            x if x == Style::FontRedPhoenix as u16 => Ok(Style::FontRedPhoenix),
            x if x == Style::FontRelief as u16 => Ok(Style::FontRelief),
            x if x == Style::FontRelief2 as u16 => Ok(Style::FontRelief2),
            x if x == Style::FontReverse as u16 => Ok(Style::FontReverse),
            x if x == Style::FontRoman as u16 => Ok(Style::FontRoman),
            x if x == Style::FontRot13 as u16 => Ok(Style::FontRot13),
            x if x == Style::FontRotated as u16 => Ok(Style::FontRotated),
            x if x == Style::FontRounded as u16 => Ok(Style::FontRounded),
            x if x == Style::FontRowanCap as u16 => Ok(Style::FontRowanCap),
            x if x == Style::FontRozzo as u16 => Ok(Style::FontRozzo),
            x if x == Style::FontRunic as u16 => Ok(Style::FontRunic),
            x if x == Style::FontRunyc as u16 => Ok(Style::FontRunyc),
            x if x == Style::FontSBlood as u16 => Ok(Style::FontSBlood),
            x if x == Style::FontSlScript as u16 => Ok(Style::FontSlScript),
            x if x == Style::FontSantaClara as u16 => Ok(Style::FontSantaClara),
            x if x == Style::FontScript as u16 => Ok(Style::FontScript),
            x if x == Style::FontSerifcap as u16 => Ok(Style::FontSerifcap),
            x if x == Style::FontShadow as u16 => Ok(Style::FontShadow),
            x if x == Style::FontShimrod as u16 => Ok(Style::FontShimrod),
            x if x == Style::FontShort as u16 => Ok(Style::FontShort),
            x if x == Style::FontSlantRelief as u16 => Ok(Style::FontSlantRelief),
            x if x == Style::FontSlant as u16 => Ok(Style::FontSlant),
            x if x == Style::FontSlide as u16 => Ok(Style::FontSlide),
            x if x == Style::FontSmallCaps as u16 => Ok(Style::FontSmallCaps),
            x if x == Style::FontSmallIsometric1 as u16 => Ok(Style::FontSmallIsometric1),
            x if x == Style::FontSmallKeyboard as u16 => Ok(Style::FontSmallKeyboard),
            x if x == Style::FontSmallPoison as u16 => Ok(Style::FontSmallPoison),
            x if x == Style::FontSmallScript as u16 => Ok(Style::FontSmallScript),
            x if x == Style::FontSmallShadow as u16 => Ok(Style::FontSmallShadow),
            x if x == Style::FontSmallSlant as u16 => Ok(Style::FontSmallSlant),
            x if x == Style::FontSmallTengwar as u16 => Ok(Style::FontSmallTengwar),
            x if x == Style::FontSmall as u16 => Ok(Style::FontSmall),
            x if x == Style::FontSoft as u16 => Ok(Style::FontSoft),
            x if x == Style::FontSpeed as u16 => Ok(Style::FontSpeed),
            x if x == Style::FontSpliff as u16 => Ok(Style::FontSpliff),
            x if x == Style::FontStacey as u16 => Ok(Style::FontStacey),
            x if x == Style::FontStampate as u16 => Ok(Style::FontStampate),
            x if x == Style::FontStampatello as u16 => Ok(Style::FontStampatello),
            x if x == Style::FontStandard as u16 => Ok(Style::FontStandard),
            x if x == Style::FontStarStrips as u16 => Ok(Style::FontStarStrips),
            x if x == Style::FontStarWars as u16 => Ok(Style::FontStarWars),
            x if x == Style::FontStellar as u16 => Ok(Style::FontStellar),
            x if x == Style::FontStforek as u16 => Ok(Style::FontStforek),
            x if x == Style::FontStickLetters as u16 => Ok(Style::FontStickLetters),
            x if x == Style::FontStop as u16 => Ok(Style::FontStop),
            x if x == Style::FontStraight as u16 => Ok(Style::FontStraight),
            x if x == Style::FontStrongerThanAll as u16 => Ok(Style::FontStrongerThanAll),
            x if x == Style::FontSubZero as u16 => Ok(Style::FontSubZero),
            x if x == Style::FontSwampLand as u16 => Ok(Style::FontSwampLand),
            x if x == Style::FontSwan as u16 => Ok(Style::FontSwan),
            x if x == Style::FontSweet as u16 => Ok(Style::FontSweet),
            x if x == Style::FontThis as u16 => Ok(Style::FontThis),
            x if x == Style::FontTanja as u16 => Ok(Style::FontTanja),
            x if x == Style::FontTengwar as u16 => Ok(Style::FontTengwar),
            x if x == Style::FontTerm as u16 => Ok(Style::FontTerm),
            x if x == Style::FontTest1 as u16 => Ok(Style::FontTest1),
            x if x == Style::FontTheEdge as u16 => Ok(Style::FontTheEdge),
            x if x == Style::FontThick as u16 => Ok(Style::FontThick),
            x if x == Style::FontThin as u16 => Ok(Style::FontThin),
            x if x == Style::FontThorned as u16 => Ok(Style::FontThorned),
            x if x == Style::FontThreePoint as u16 => Ok(Style::FontThreePoint),
            x if x == Style::FontTicksSlant as u16 => Ok(Style::FontTicksSlant),
            x if x == Style::FontTicks as u16 => Ok(Style::FontTicks),
            x if x == Style::FontTiles as u16 => Ok(Style::FontTiles),
            x if x == Style::FontTinkerToy as u16 => Ok(Style::FontTinkerToy),
            x if x == Style::FontTombstone as u16 => Ok(Style::FontTombstone),
            x if x == Style::FontTrain as u16 => Ok(Style::FontTrain),
            x if x == Style::FontTrek as u16 => Ok(Style::FontTrek),
            x if x == Style::FontTsalagi as u16 => Ok(Style::FontTsalagi),
            x if x == Style::FontTubular as u16 => Ok(Style::FontTubular),
            x if x == Style::FontTwisted as u16 => Ok(Style::FontTwisted),
            x if x == Style::FontTwoPoint as u16 => Ok(Style::FontTwoPoint),
            x if x == Style::FontUsaFlag as u16 => Ok(Style::FontUsaFlag),
            x if x == Style::FontUnivers as u16 => Ok(Style::FontUnivers),
            x if x == Style::FontVarsity as u16 => Ok(Style::FontVarsity),
            x if x == Style::FontWavy as u16 => Ok(Style::FontWavy),
            x if x == Style::FontWeird as u16 => Ok(Style::FontWeird),
            x if x == Style::FontWetLetter as u16 => Ok(Style::FontWetLetter),
            x if x == Style::FontWhimsy as u16 => Ok(Style::FontWhimsy),
            x if x == Style::FontWow as u16 => Ok(Style::FontWow),

            _ => Err(CustomProgramError::InvalidStyle.into()),
        }
    }
}

pub fn pick(style: u16) -> Result<(u8, CHARSET)> {
    match Style::try_from(style)? {
        Style::Font1Row => Ok((font_1row::HEIGHT, font_1row::SET)),
        Style::Font3D => Ok((font_3_d::HEIGHT, font_3_d::SET)),
        Style::Font3DDiagonal => Ok((font_3d_diagonal::HEIGHT, font_3d_diagonal::SET)),
        Style::Font3DAscii => Ok((font_3d_ascii::HEIGHT, font_3d_ascii::SET)),
        Style::Font3X5 => Ok((font_3x5::HEIGHT, font_3x5::SET)),
        Style::Font4Max => Ok((font_4max::HEIGHT, font_4max::SET)),
        Style::Font5LineOblique => Ok((font_5_line_oblique::HEIGHT, font_5_line_oblique::SET)),
        Style::FontAmc3Line => Ok((font_amc_3_line::HEIGHT, font_amc_3_line::SET)),
        Style::FontAmc3Liv1 => Ok((font_amc_3_liv1::HEIGHT, font_amc_3_liv1::SET)),
        Style::FontAmcAaa01 => Ok((font_amc_aaa01::HEIGHT, font_amc_aaa01::SET)),
        Style::FontAmcNeko => Ok((font_amc_neko::HEIGHT, font_amc_neko::SET)),
        Style::FontAmcRazor => Ok((font_amc_razor::HEIGHT, font_amc_razor::SET)),
        Style::FontAmcRazor2 => Ok((font_amc_razor2::HEIGHT, font_amc_razor2::SET)),
        Style::FontAmcSlash => Ok((font_amc_slash::HEIGHT, font_amc_slash::SET)),
        Style::FontAmcSlider => Ok((font_amc_slider::HEIGHT, font_amc_slider::SET)),
        Style::FontAmcThin => Ok((font_amc_thin::HEIGHT, font_amc_thin::SET)),
        Style::FontAmcTubes => Ok((font_amc_tubes::HEIGHT, font_amc_tubes::SET)),
        Style::FontAmcUntitled => Ok((font_amc_untitled::HEIGHT, font_amc_untitled::SET)),
        Style::FontAnsiRegular => Ok((font_ansi_regular::HEIGHT, font_ansi_regular::SET)),
        Style::FontAnsiShadow => Ok((font_ansi_shadow::HEIGHT, font_ansi_shadow::SET)),
        Style::FontAsciiNewRoman => Ok((font_ascii_new_roman::HEIGHT, font_ascii_new_roman::SET)),
        Style::FontAcrobatic => Ok((font_acrobatic::HEIGHT, font_acrobatic::SET)),
        Style::FontAlligator => Ok((font_alligator::HEIGHT, font_alligator::SET)),
        Style::FontAlligator2 => Ok((font_alligator2::HEIGHT, font_alligator2::SET)),
        Style::FontAlpha => Ok((font_alpha::HEIGHT, font_alpha::SET)),
        Style::FontAlphabet => Ok((font_alphabet::HEIGHT, font_alphabet::SET)),
        Style::FontArrows => Ok((font_arrows::HEIGHT, font_arrows::SET)),
        Style::FontAvatar => Ok((font_avatar::HEIGHT, font_avatar::SET)),
        Style::FontB1Ff => Ok((font_b1ff::HEIGHT, font_b1ff::SET)),
        Style::FontBanner => Ok((font_banner::HEIGHT, font_banner::SET)),
        Style::FontBanner3D => Ok((font_banner3_d::HEIGHT, font_banner3_d::SET)),
        Style::FontBanner3 => Ok((font_banner3::HEIGHT, font_banner3::SET)),
        Style::FontBanner4 => Ok((font_banner4::HEIGHT, font_banner4::SET)),
        Style::FontBarbwire => Ok((font_barbwire::HEIGHT, font_barbwire::SET)),
        Style::FontBasic => Ok((font_basic::HEIGHT, font_basic::SET)),
        Style::FontBear => Ok((font_bear::HEIGHT, font_bear::SET)),
        Style::FontBell => Ok((font_bell::HEIGHT, font_bell::SET)),
        Style::FontBenjamin => Ok((font_benjamin::HEIGHT, font_benjamin::SET)),
        Style::FontBigChief => Ok((font_big_chief::HEIGHT, font_big_chief::SET)),
        Style::FontBigMoneyNe => Ok((font_big_money_ne::HEIGHT, font_big_money_ne::SET)),
        Style::FontBigMoneyNw => Ok((font_big_money_nw::HEIGHT, font_big_money_nw::SET)),
        Style::FontBigMoneySe => Ok((font_big_money_se::HEIGHT, font_big_money_se::SET)),
        Style::FontBigMoneySw => Ok((font_big_money_sw::HEIGHT, font_big_money_sw::SET)),
        Style::FontBig => Ok((font_big::HEIGHT, font_big::SET)),
        Style::FontBigfig => Ok((font_bigfig::HEIGHT, font_bigfig::SET)),
        Style::FontBinary => Ok((font_binary::HEIGHT, font_binary::SET)),
        Style::FontBlock => Ok((font_block::HEIGHT, font_block::SET)),
        Style::FontBlocks => Ok((font_blocks::HEIGHT, font_blocks::SET)),
        Style::FontBloody => Ok((font_bloody::HEIGHT, font_bloody::SET)),
        Style::FontBolger => Ok((font_bolger::HEIGHT, font_bolger::SET)),
        Style::FontBraced => Ok((font_braced::HEIGHT, font_braced::SET)),
        Style::FontBright => Ok((font_bright::HEIGHT, font_bright::SET)),
        Style::FontBroadwayKb => Ok((font_broadway_kb::HEIGHT, font_broadway_kb::SET)),
        Style::FontBroadway => Ok((font_broadway::HEIGHT, font_broadway::SET)),
        Style::FontBubble => Ok((font_bubble::HEIGHT, font_bubble::SET)),
        Style::FontBulbhead => Ok((font_bulbhead::HEIGHT, font_bulbhead::SET)),
        Style::FontCaligraphy => Ok((font_caligraphy::HEIGHT, font_caligraphy::SET)),
        Style::FontCaligraphy2 => Ok((font_caligraphy2::HEIGHT, font_caligraphy2::SET)),
        Style::FontCalvinS => Ok((font_calvin_s::HEIGHT, font_calvin_s::SET)),
        Style::FontCards => Ok((font_cards::HEIGHT, font_cards::SET)),
        Style::FontCatwalk => Ok((font_catwalk::HEIGHT, font_catwalk::SET)),
        Style::FontChiseled => Ok((font_chiseled::HEIGHT, font_chiseled::SET)),
        Style::FontChunky => Ok((font_chunky::HEIGHT, font_chunky::SET)),
        Style::FontCoinstak => Ok((font_coinstak::HEIGHT, font_coinstak::SET)),
        Style::FontCola => Ok((font_cola::HEIGHT, font_cola::SET)),
        Style::FontColossal => Ok((font_colossal::HEIGHT, font_colossal::SET)),
        Style::FontComputer => Ok((font_computer::HEIGHT, font_computer::SET)),
        Style::FontContessa => Ok((font_contessa::HEIGHT, font_contessa::SET)),
        Style::FontContrast => Ok((font_contrast::HEIGHT, font_contrast::SET)),
        Style::FontCosmike => Ok((font_cosmike::HEIGHT, font_cosmike::SET)),
        Style::FontCrawford => Ok((font_crawford::HEIGHT, font_crawford::SET)),
        Style::FontCrawford2 => Ok((font_crawford2::HEIGHT, font_crawford2::SET)),
        Style::FontCrazy => Ok((font_crazy::HEIGHT, font_crazy::SET)),
        Style::FontCricket => Ok((font_cricket::HEIGHT, font_cricket::SET)),
        Style::FontCursive => Ok((font_cursive::HEIGHT, font_cursive::SET)),
        Style::FontCyberlarge => Ok((font_cyberlarge::HEIGHT, font_cyberlarge::SET)),
        Style::FontCybermedium => Ok((font_cybermedium::HEIGHT, font_cybermedium::SET)),
        Style::FontCybersmall => Ok((font_cybersmall::HEIGHT, font_cybersmall::SET)),
        Style::FontCygnet => Ok((font_cygnet::HEIGHT, font_cygnet::SET)),
        Style::FontDanc4 => Ok((font_danc4::HEIGHT, font_danc4::SET)),
        Style::FontDosRebel => Ok((font_dos_rebel::HEIGHT, font_dos_rebel::SET)),
        Style::FontDwhistled => Ok((font_dwhistled::HEIGHT, font_dwhistled::SET)),
        Style::FontDancingFont => Ok((font_dancing_font::HEIGHT, font_dancing_font::SET)),
        Style::FontDecimal => Ok((font_decimal::HEIGHT, font_decimal::SET)),
        Style::FontDefLeppard => Ok((font_def_leppard::HEIGHT, font_def_leppard::SET)),
        Style::FontDeltaCorpsPriest1 => Ok((
            font_delta_corps_priest_1::HEIGHT,
            font_delta_corps_priest_1::SET,
        )),
        Style::FontDiamond => Ok((font_diamond::HEIGHT, font_diamond::SET)),
        Style::FontDietCola => Ok((font_diet_cola::HEIGHT, font_diet_cola::SET)),
        Style::FontDigital => Ok((font_digital::HEIGHT, font_digital::SET)),
        Style::FontDoh => Ok((font_doh::HEIGHT, font_doh::SET)),
        Style::FontDoom => Ok((font_doom::HEIGHT, font_doom::SET)),
        Style::FontDotMatrix => Ok((font_dot_matrix::HEIGHT, font_dot_matrix::SET)),
        Style::FontDoubleShorts => Ok((font_double_shorts::HEIGHT, font_double_shorts::SET)),
        Style::FontDouble => Ok((font_double::HEIGHT, font_double::SET)),
        Style::FontDrPepper => Ok((font_dr_pepper::HEIGHT, font_dr_pepper::SET)),
        Style::FontEftiFont => Ok((font_efti_font::HEIGHT, font_efti_font::SET)),
        Style::FontEftiItalic => Ok((font_efti_italic::HEIGHT, font_efti_italic::SET)),
        Style::FontEftiPiti => Ok((font_efti_piti::HEIGHT, font_efti_piti::SET)),
        Style::FontEftiRobot => Ok((font_efti_robot::HEIGHT, font_efti_robot::SET)),
        Style::FontEftiWall => Ok((font_efti_wall::HEIGHT, font_efti_wall::SET)),
        Style::FontEftiWater => Ok((font_efti_water::HEIGHT, font_efti_water::SET)),
        Style::FontElectronic => Ok((font_electronic::HEIGHT, font_electronic::SET)),
        Style::FontElite => Ok((font_elite::HEIGHT, font_elite::SET)),
        Style::FontEpic => Ok((font_epic::HEIGHT, font_epic::SET)),
        Style::FontFender => Ok((font_fender::HEIGHT, font_fender::SET)),
        Style::FontFilter => Ok((font_filter::HEIGHT, font_filter::SET)),
        Style::FontFireFontK => Ok((font_fire_font_k::HEIGHT, font_fire_font_k::SET)),
        Style::FontFireFontS => Ok((font_fire_font_s::HEIGHT, font_fire_font_s::SET)),
        Style::FontFlipped => Ok((font_flipped::HEIGHT, font_flipped::SET)),
        Style::FontFlowerPower => Ok((font_flower_power::HEIGHT, font_flower_power::SET)),
        Style::FontFourTops => Ok((font_four_tops::HEIGHT, font_four_tops::SET)),
        Style::FontFraktur => Ok((font_fraktur::HEIGHT, font_fraktur::SET)),
        Style::FontFunFace => Ok((font_fun_face::HEIGHT, font_fun_face::SET)),
        Style::FontFunFaces => Ok((font_fun_faces::HEIGHT, font_fun_faces::SET)),
        Style::FontFuzzy => Ok((font_fuzzy::HEIGHT, font_fuzzy::SET)),
        Style::FontGeorgi16 => Ok((font_georgi16::HEIGHT, font_georgi16::SET)),
        Style::FontGeorgia11 => Ok((font_georgia11::HEIGHT, font_georgia11::SET)),
        Style::FontGhost => Ok((font_ghost::HEIGHT, font_ghost::SET)),
        Style::FontGhoulish => Ok((font_ghoulish::HEIGHT, font_ghoulish::SET)),
        Style::FontGlenyn => Ok((font_glenyn::HEIGHT, font_glenyn::SET)),
        Style::FontGoofy => Ok((font_goofy::HEIGHT, font_goofy::SET)),
        Style::FontGothic => Ok((font_gothic::HEIGHT, font_gothic::SET)),
        Style::FontGraceful => Ok((font_graceful::HEIGHT, font_graceful::SET)),
        Style::FontGradient => Ok((font_gradient::HEIGHT, font_gradient::SET)),
        Style::FontGraffiti => Ok((font_graffiti::HEIGHT, font_graffiti::SET)),
        Style::FontGreek => Ok((font_greek::HEIGHT, font_greek::SET)),
        Style::FontHeartLeft => Ok((font_heart_left::HEIGHT, font_heart_left::SET)),
        Style::FontHeartRight => Ok((font_heart_right::HEIGHT, font_heart_right::SET)),
        Style::FontHenry3D => Ok((font_henry_3d::HEIGHT, font_henry_3d::SET)),
        Style::FontHex => Ok((font_hex::HEIGHT, font_hex::SET)),
        Style::FontHieroglyphs => Ok((font_hieroglyphs::HEIGHT, font_hieroglyphs::SET)),
        Style::FontHollywood => Ok((font_hollywood::HEIGHT, font_hollywood::SET)),
        Style::FontHorizontalLeft => Ok((font_horizontal_left::HEIGHT, font_horizontal_left::SET)),
        Style::FontHorizontalRight => {
            Ok((font_horizontal_right::HEIGHT, font_horizontal_right::SET))
        }
        Style::FontIcl1900 => Ok((font_icl_1900::HEIGHT, font_icl_1900::SET)),
        Style::FontImpossible => Ok((font_impossible::HEIGHT, font_impossible::SET)),
        Style::FontInvita => Ok((font_invita::HEIGHT, font_invita::SET)),
        Style::FontIsometric1 => Ok((font_isometric1::HEIGHT, font_isometric1::SET)),
        Style::FontIsometric2 => Ok((font_isometric2::HEIGHT, font_isometric2::SET)),
        Style::FontIsometric3 => Ok((font_isometric3::HEIGHT, font_isometric3::SET)),
        Style::FontIsometric4 => Ok((font_isometric4::HEIGHT, font_isometric4::SET)),
        Style::FontItalic => Ok((font_italic::HEIGHT, font_italic::SET)),
        Style::FontIvrit => Ok((font_ivrit::HEIGHT, font_ivrit::SET)),
        Style::FontJsBlockLetters => {
            Ok((font_js_block_letters::HEIGHT, font_js_block_letters::SET))
        }
        Style::FontJsBracketLetters => Ok((
            font_js_bracket_letters::HEIGHT,
            font_js_bracket_letters::SET,
        )),
        Style::FontJsCapitalCurves => {
            Ok((font_js_capital_curves::HEIGHT, font_js_capital_curves::SET))
        }
        Style::FontJsCursive => Ok((font_js_cursive::HEIGHT, font_js_cursive::SET)),
        Style::FontJsStickLetters => {
            Ok((font_js_stick_letters::HEIGHT, font_js_stick_letters::SET))
        }
        Style::FontJacky => Ok((font_jacky::HEIGHT, font_jacky::SET)),
        Style::FontJazmine => Ok((font_jazmine::HEIGHT, font_jazmine::SET)),
        Style::FontJerusalem => Ok((font_jerusalem::HEIGHT, font_jerusalem::SET)),
        Style::FontKatakana => Ok((font_katakana::HEIGHT, font_katakana::SET)),
        Style::FontKban => Ok((font_kban::HEIGHT, font_kban::SET)),
        Style::FontKeyboard => Ok((font_keyboard::HEIGHT, font_keyboard::SET)),
        Style::FontKnob => Ok((font_knob::HEIGHT, font_knob::SET)),
        Style::FontKontoSlant => Ok((font_konto_slant::HEIGHT, font_konto_slant::SET)),
        Style::FontKonto => Ok((font_konto::HEIGHT, font_konto::SET)),
        Style::FontLcd => Ok((font_lcd::HEIGHT, font_lcd::SET)),
        Style::FontLarry3D2 => Ok((font_larry_3d_2::HEIGHT, font_larry_3d_2::SET)),
        Style::FontLarry3D => Ok((font_larry_3d::HEIGHT, font_larry_3d::SET)),
        Style::FontLean => Ok((font_lean::HEIGHT, font_lean::SET)),
        Style::FontLetters => Ok((font_letters::HEIGHT, font_letters::SET)),
        Style::FontLilDevil => Ok((font_lil_devil::HEIGHT, font_lil_devil::SET)),
        Style::FontLineBlocks => Ok((font_line_blocks::HEIGHT, font_line_blocks::SET)),
        Style::FontLinux => Ok((font_linux::HEIGHT, font_linux::SET)),
        Style::FontLockergnome => Ok((font_lockergnome::HEIGHT, font_lockergnome::SET)),
        Style::FontMadrid => Ok((font_madrid::HEIGHT, font_madrid::SET)),
        Style::FontMarquee => Ok((font_marquee::HEIGHT, font_marquee::SET)),
        Style::FontMaxfour => Ok((font_maxfour::HEIGHT, font_maxfour::SET)),
        Style::FontMerlin1 => Ok((font_merlin1::HEIGHT, font_merlin1::SET)),
        Style::FontMerlin2 => Ok((font_merlin2::HEIGHT, font_merlin2::SET)),
        Style::FontMike => Ok((font_mike::HEIGHT, font_mike::SET)),
        Style::FontMini => Ok((font_mini::HEIGHT, font_mini::SET)),
        Style::FontMirror => Ok((font_mirror::HEIGHT, font_mirror::SET)),
        Style::FontMnemonic => Ok((font_mnemonic::HEIGHT, font_mnemonic::SET)),
        Style::FontModular => Ok((font_modular::HEIGHT, font_modular::SET)),
        Style::FontMorse => Ok((font_morse::HEIGHT, font_morse::SET)),
        Style::FontMorse2 => Ok((font_morse2::HEIGHT, font_morse2::SET)),
        Style::FontMoscow => Ok((font_moscow::HEIGHT, font_moscow::SET)),
        Style::FontMshebrew210 => Ok((font_mshebrew210::HEIGHT, font_mshebrew210::SET)),
        Style::FontMuzzle => Ok((font_muzzle::HEIGHT, font_muzzle::SET)),
        Style::FontNscript => Ok((font_nscript::HEIGHT, font_nscript::SET)),
        Style::FontNtGreek => Ok((font_nt_greek::HEIGHT, font_nt_greek::SET)),
        Style::FontNvScript => Ok((font_nv_script::HEIGHT, font_nv_script::SET)),
        Style::FontNancyjFancy => Ok((font_nancyj_fancy::HEIGHT, font_nancyj_fancy::SET)),
        Style::FontNancyjImproved => Ok((font_nancyj_improved::HEIGHT, font_nancyj_improved::SET)),
        Style::FontNancyjUnderlined => {
            Ok((font_nancyj_underlined::HEIGHT, font_nancyj_underlined::SET))
        }
        Style::FontNancyj => Ok((font_nancyj::HEIGHT, font_nancyj::SET)),
        Style::FontNipples => Ok((font_nipples::HEIGHT, font_nipples::SET)),
        Style::FontO8 => Ok((font_o8::HEIGHT, font_o8::SET)),
        Style::FontOs2 => Ok((font_os2::HEIGHT, font_os2::SET)),
        Style::FontOctal => Ok((font_octal::HEIGHT, font_octal::SET)),
        Style::FontOgre => Ok((font_ogre::HEIGHT, font_ogre::SET)),
        Style::FontOldBanner => Ok((font_old_banner::HEIGHT, font_old_banner::SET)),
        Style::FontPagga => Ok((font_pagga::HEIGHT, font_pagga::SET)),
        Style::FontPatorjksCheese => Ok((font_patorjks_cheese::HEIGHT, font_patorjks_cheese::SET)),
        Style::FontPatorjkHex => Ok((font_patorjk_hex::HEIGHT, font_patorjk_hex::SET)),
        Style::FontPawp => Ok((font_pawp::HEIGHT, font_pawp::SET)),
        Style::FontPeaksSlant => Ok((font_peaks_slant::HEIGHT, font_peaks_slant::SET)),
        Style::FontPeaks => Ok((font_peaks::HEIGHT, font_peaks::SET)),
        Style::FontPebbles => Ok((font_pebbles::HEIGHT, font_pebbles::SET)),
        Style::FontPepper => Ok((font_pepper::HEIGHT, font_pepper::SET)),
        Style::FontPoison => Ok((font_poison::HEIGHT, font_poison::SET)),
        Style::FontPuffy => Ok((font_puffy::HEIGHT, font_puffy::SET)),
        Style::FontPuzzle => Ok((font_puzzle::HEIGHT, font_puzzle::SET)),
        Style::FontPyramid => Ok((font_pyramid::HEIGHT, font_pyramid::SET)),
        Style::FontRammstein => Ok((font_rammstein::HEIGHT, font_rammstein::SET)),
        Style::FontRectangles => Ok((font_rectangles::HEIGHT, font_rectangles::SET)),
        Style::FontRedPhoenix => Ok((font_red_phoenix::HEIGHT, font_red_phoenix::SET)),
        Style::FontRelief => Ok((font_relief::HEIGHT, font_relief::SET)),
        Style::FontRelief2 => Ok((font_relief2::HEIGHT, font_relief2::SET)),
        Style::FontReverse => Ok((font_reverse::HEIGHT, font_reverse::SET)),
        Style::FontRoman => Ok((font_roman::HEIGHT, font_roman::SET)),
        Style::FontRot13 => Ok((font_rot13::HEIGHT, font_rot13::SET)),
        Style::FontRotated => Ok((font_rotated::HEIGHT, font_rotated::SET)),
        Style::FontRounded => Ok((font_rounded::HEIGHT, font_rounded::SET)),
        Style::FontRowanCap => Ok((font_rowan_cap::HEIGHT, font_rowan_cap::SET)),
        Style::FontRozzo => Ok((font_rozzo::HEIGHT, font_rozzo::SET)),
        Style::FontRunic => Ok((font_runic::HEIGHT, font_runic::SET)),
        Style::FontRunyc => Ok((font_runyc::HEIGHT, font_runyc::SET)),
        Style::FontSBlood => Ok((font_s_blood::HEIGHT, font_s_blood::SET)),
        Style::FontSlScript => Ok((font_sl_script::HEIGHT, font_sl_script::SET)),
        Style::FontSantaClara => Ok((font_santa_clara::HEIGHT, font_santa_clara::SET)),
        Style::FontScript => Ok((font_script::HEIGHT, font_script::SET)),
        Style::FontSerifcap => Ok((font_serifcap::HEIGHT, font_serifcap::SET)),
        Style::FontShadow => Ok((font_shadow::HEIGHT, font_shadow::SET)),
        Style::FontShimrod => Ok((font_shimrod::HEIGHT, font_shimrod::SET)),
        Style::FontShort => Ok((font_short::HEIGHT, font_short::SET)),
        Style::FontSlantRelief => Ok((font_slant_relief::HEIGHT, font_slant_relief::SET)),
        Style::FontSlant => Ok((font_slant::HEIGHT, font_slant::SET)),
        Style::FontSlide => Ok((font_slide::HEIGHT, font_slide::SET)),
        Style::FontSmallCaps => Ok((font_small_caps::HEIGHT, font_small_caps::SET)),
        Style::FontSmallIsometric1 => {
            Ok((font_small_isometric1::HEIGHT, font_small_isometric1::SET))
        }
        Style::FontSmallKeyboard => Ok((font_small_keyboard::HEIGHT, font_small_keyboard::SET)),
        Style::FontSmallPoison => Ok((font_small_poison::HEIGHT, font_small_poison::SET)),
        Style::FontSmallScript => Ok((font_small_script::HEIGHT, font_small_script::SET)),
        Style::FontSmallShadow => Ok((font_small_shadow::HEIGHT, font_small_shadow::SET)),
        Style::FontSmallSlant => Ok((font_small_slant::HEIGHT, font_small_slant::SET)),
        Style::FontSmallTengwar => Ok((font_small_tengwar::HEIGHT, font_small_tengwar::SET)),
        Style::FontSmall => Ok((font_small::HEIGHT, font_small::SET)),
        Style::FontSoft => Ok((font_soft::HEIGHT, font_soft::SET)),
        Style::FontSpeed => Ok((font_speed::HEIGHT, font_speed::SET)),
        Style::FontSpliff => Ok((font_spliff::HEIGHT, font_spliff::SET)),
        Style::FontStacey => Ok((font_stacey::HEIGHT, font_stacey::SET)),
        Style::FontStampate => Ok((font_stampate::HEIGHT, font_stampate::SET)),
        Style::FontStampatello => Ok((font_stampatello::HEIGHT, font_stampatello::SET)),
        Style::FontStandard => Ok((font_standard::HEIGHT, font_standard::SET)),
        Style::FontStarStrips => Ok((font_star_strips::HEIGHT, font_star_strips::SET)),
        Style::FontStarWars => Ok((font_star_wars::HEIGHT, font_star_wars::SET)),
        Style::FontStellar => Ok((font_stellar::HEIGHT, font_stellar::SET)),
        Style::FontStforek => Ok((font_stforek::HEIGHT, font_stforek::SET)),
        Style::FontStickLetters => Ok((font_stick_letters::HEIGHT, font_stick_letters::SET)),
        Style::FontStop => Ok((font_stop::HEIGHT, font_stop::SET)),
        Style::FontStraight => Ok((font_straight::HEIGHT, font_straight::SET)),
        Style::FontStrongerThanAll => {
            Ok((font_stronger_than_all::HEIGHT, font_stronger_than_all::SET))
        }
        Style::FontSubZero => Ok((font_sub_zero::HEIGHT, font_sub_zero::SET)),
        Style::FontSwampLand => Ok((font_swamp_land::HEIGHT, font_swamp_land::SET)),
        Style::FontSwan => Ok((font_swan::HEIGHT, font_swan::SET)),
        Style::FontSweet => Ok((font_sweet::HEIGHT, font_sweet::SET)),
        Style::FontThis => Ok((font_this::HEIGHT, font_this::SET)),
        Style::FontTanja => Ok((font_tanja::HEIGHT, font_tanja::SET)),
        Style::FontTengwar => Ok((font_tengwar::HEIGHT, font_tengwar::SET)),
        Style::FontTerm => Ok((font_term::HEIGHT, font_term::SET)),
        Style::FontTest1 => Ok((font_test1::HEIGHT, font_test1::SET)),
        Style::FontTheEdge => Ok((font_the_edge::HEIGHT, font_the_edge::SET)),
        Style::FontThick => Ok((font_thick::HEIGHT, font_thick::SET)),
        Style::FontThin => Ok((font_thin::HEIGHT, font_thin::SET)),
        Style::FontThorned => Ok((font_thorned::HEIGHT, font_thorned::SET)),
        Style::FontThreePoint => Ok((font_three_point::HEIGHT, font_three_point::SET)),
        Style::FontTicksSlant => Ok((font_ticks_slant::HEIGHT, font_ticks_slant::SET)),
        Style::FontTicks => Ok((font_ticks::HEIGHT, font_ticks::SET)),
        Style::FontTiles => Ok((font_tiles::HEIGHT, font_tiles::SET)),
        Style::FontTinkerToy => Ok((font_tinker_toy::HEIGHT, font_tinker_toy::SET)),
        Style::FontTombstone => Ok((font_tombstone::HEIGHT, font_tombstone::SET)),
        Style::FontTrain => Ok((font_train::HEIGHT, font_train::SET)),
        Style::FontTrek => Ok((font_trek::HEIGHT, font_trek::SET)),
        Style::FontTsalagi => Ok((font_tsalagi::HEIGHT, font_tsalagi::SET)),
        Style::FontTubular => Ok((font_tubular::HEIGHT, font_tubular::SET)),
        Style::FontTwisted => Ok((font_twisted::HEIGHT, font_twisted::SET)),
        Style::FontTwoPoint => Ok((font_two_point::HEIGHT, font_two_point::SET)),
        Style::FontUsaFlag => Ok((font_usa_flag::HEIGHT, font_usa_flag::SET)),
        Style::FontUnivers => Ok((font_univers::HEIGHT, font_univers::SET)),
        Style::FontVarsity => Ok((font_varsity::HEIGHT, font_varsity::SET)),
        Style::FontWavy => Ok((font_wavy::HEIGHT, font_wavy::SET)),
        Style::FontWeird => Ok((font_weird::HEIGHT, font_weird::SET)),
        Style::FontWetLetter => Ok((font_wet_letter::HEIGHT, font_wet_letter::SET)),
        Style::FontWhimsy => Ok((font_whimsy::HEIGHT, font_whimsy::SET)),
        Style::FontWow => Ok((font_wow::HEIGHT, font_wow::SET)),
    }
}
